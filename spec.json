{
  "openapi": "3.1.0",
  "info": { "title": "Bindbee APIs", "version": "0.1.0" },
  "paths": {
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/hris/v1/bank-info": {
      "get": {
        "tags": ["Bank Info"],
        "summary": "Get Bank Info List",
        "description": "Returns a list of BankInfo objects.",
        "operationId": "get_bank_info_list_api_hris_v1_bank_info_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of bank info records to fetch",
              "title": "Ids"
            },
            "description": "The ID of bank info records to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees for the bank info to fetch",
              "title": "Employee Id"
            },
            "description": "The ID of the employees for the bank info to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisBankInfoPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/bank-info/{id}": {
      "get": {
        "tags": ["Bank Info"],
        "summary": "Get Bank Info By Id",
        "description": "Returns a BankInfo object with the given id.",
        "operationId": "get_bank_info_by_id_api_hris_v1_bank_info__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisBankInfo" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/benefits": {
      "get": {
        "tags": ["Benefits"],
        "summary": "Get Benefits",
        "description": "Returns a list of Benefit objects.",
        "operationId": "get_benefits_api_hris_v1_benefits_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the benefits to fetch",
              "title": "Ids"
            },
            "description": "The ID of the benefits to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees for the benefits to fetch",
              "title": "Employee Id"
            },
            "description": "The ID of the employees for the benefits to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employer_benefit_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employer benefits for the benefits to fetch",
              "title": "Employer Benefit Id"
            },
            "description": "The ID of the employer benefits for the benefits to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "start_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date From"
            },
            "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date To"
            },
            "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date From"
            },
            "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date To"
            },
            "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "effective_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with effective_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Effective Date From"
            },
            "description": "If provided, only objects with effective_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "effective_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with effective_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Effective Date To"
            },
            "description": "If provided, only objects with effective_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisBenefitPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/benefits/{id}": {
      "get": {
        "tags": ["Benefits"],
        "summary": "Get Benefit By Id",
        "description": "Returns a Benefit object with the given id.",
        "operationId": "get_benefit_by_id_api_hris_v1_benefits__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisBenefit" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/companies": {
      "get": {
        "tags": ["Company"],
        "summary": "Get Companies",
        "description": "Returns a list of Companies objects.",
        "operationId": "get_companies_api_hris_v1_companies_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of companies to fetch",
              "title": "Ids"
            },
            "description": "The ID of companies to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisCompanyPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/companies/{id}": {
      "get": {
        "tags": ["Company"],
        "summary": "Get Company By Id",
        "description": "Returns a Company object with the given id.",
        "operationId": "get_company_by_id_api_hris_v1_companies__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisCompany" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/dependents": {
      "get": {
        "tags": ["Dependents"],
        "summary": "Get Dependents",
        "description": "Returns a list of Dependent objects.",
        "operationId": "get_dependents_api_hris_v1_dependents_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the dependents to fetch",
              "title": "Ids"
            },
            "description": "The ID of the dependents to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch dependents for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch dependents for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisDependentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/dependents/{id}": {
      "get": {
        "tags": ["Dependents"],
        "summary": "Get Dependent By Id",
        "description": "Returns a Dependent object with the given id.",
        "operationId": "get_dependent_by_id_api_hris_v1_dependents__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisDependent" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/dependent-benefits": {
      "get": {
        "tags": ["Dependent Benefits"],
        "summary": "Get Dependent Benefits",
        "description": "Returns a list of Dependent Benefit objects.",
        "operationId": "get_dependent_benefits_api_hris_v1_dependent_benefits_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the dependent benefits to fetch",
              "title": "Ids"
            },
            "description": "The ID of the dependent benefits to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employer_benefit_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employer benefits to fetch dependent benefits for",
              "title": "Employer Benefit Id"
            },
            "description": "The ID of the employer benefits to fetch dependent benefits for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "dependent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the dependents to fetch dependent benefits for",
              "title": "Dependent Id"
            },
            "description": "The ID of the dependents to fetch dependent benefits for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "start_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date From"
            },
            "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date To"
            },
            "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date From"
            },
            "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date To"
            },
            "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisDependentBenefitPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/dependent-benefits/{id}": {
      "get": {
        "tags": ["Dependent Benefits"],
        "summary": "Get Dependent Benefit By Id",
        "description": "Returns a Dependent Benefit object with the given id.",
        "operationId": "get_dependent_benefit_by_id_api_hris_v1_dependent_benefits__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisDependentBenefit"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employer-benefits": {
      "get": {
        "tags": ["Employer Benefits"],
        "summary": "Get Employer Benefits",
        "description": "Returns a list of Employer Benefit objects.",
        "operationId": "get_employer_benefits_api_hris_v1_employer_benefits_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employer benefits to fetch",
              "title": "Ids"
            },
            "description": "The ID of the employer benefits to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmployerBenefitPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employer-benefits/{id}": {
      "get": {
        "tags": ["Employer Benefits"],
        "summary": "Get Employer Benefit By Id",
        "description": "Returns a Employer Benefit object with the given id.",
        "operationId": "get_employer_benefit_by_id_api_hris_v1_employer_benefits__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisEmployerBenefit" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employees": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get Employees",
        "description": "Returns a list of Employee objects.",
        "operationId": "get_employees_api_hris_v1_employees_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of employees to fetch",
              "title": "Ids"
            },
            "description": "The ID of employees to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "manager_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of managers to fetch employees for",
              "title": "Manager Id"
            },
            "description": "The ID of managers to fetch employees for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of companies to fetch employees for",
              "title": "Company Id"
            },
            "description": "The ID of companies to fetch employees for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "employment_status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/HRISEmploymentStatus",
              "description": "If provided, will only return employees with this employment status."
            },
            "description": "If provided, will only return employees with this employment status.",
            "example": "ACTIVE"
          },
          {
            "name": "employee_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will only return employees for this employee number",
              "title": "Employee Number"
            },
            "description": "If provided, will only return employees for this employee number",
            "example": "000000168"
          },
          {
            "name": "groups",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of groups to fetch employees for",
              "title": "Groups"
            },
            "description": "The ID of groups to fetch employees for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmployeePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Employee"],
        "summary": "Create Employee",
        "description": "Creates an Employee object with the given values.",
        "operationId": "create_employee_api_hris_v1_employees_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HrisEmployeeCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WriteApiResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employees/create/meta": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get Create Employee Request Body",
        "description": "Returns the data points required to add new employee in HRIS",
        "operationId": "get_create_employee_request_body_api_hris_v1_employees_create_meta_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaApiResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employees/{id}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get Employee By Id",
        "description": "Returns an Employee object with the given id.",
        "operationId": "get_employee_by_id_api_hris_v1_employees__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmployeeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employments": {
      "get": {
        "tags": ["Employments"],
        "summary": "Get Employments",
        "description": "Returns a list of Employment objects.",
        "operationId": "get_employments_api_hris_v1_employments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employments to fetch",
              "title": "Ids"
            },
            "description": "The ID of the employments to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID for employees to fetch employments for",
              "title": "Employee Id"
            },
            "description": "The ID for employees to fetch employments for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmploymentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employments/{id}": {
      "get": {
        "tags": ["Employments"],
        "summary": "Get Employment By Id",
        "description": "Returns an Employment object with the given id.",
        "operationId": "get_employment_by_id_api_hris_v1_employments__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisEmployment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/groups": {
      "get": {
        "tags": ["Group"],
        "summary": "Get Groups",
        "description": "Returns a list of Group objects.",
        "operationId": "get_groups_api_hris_v1_groups_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the groups to fetch",
              "title": "Ids"
            },
            "description": "The ID of the groups to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisGroupPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/groups/{id}": {
      "get": {
        "tags": ["Group"],
        "summary": "Get Group By Id",
        "description": "Returns a Group object with the given id.",
        "operationId": "get_group_by_id_api_hris_v1_groups__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisGroup" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/pay-groups": {
      "get": {
        "tags": ["Pay Groups"],
        "summary": "Get Pay Groups",
        "description": "Returns a list of PayGroup objects.",
        "operationId": "get_pay_groups_api_hris_v1_pay_groups_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the pay groups to fetch",
              "title": "Ids"
            },
            "description": "The ID of the pay groups to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisPayGroupPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/pay-groups/{id}": {
      "get": {
        "tags": ["Pay Groups"],
        "summary": "Get Pay Group By Id",
        "description": "Returns a PayGroup object with the given id.",
        "operationId": "get_pay_group_by_id_api_hris_v1_pay_groups__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisPayGroup" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/payroll-runs": {
      "get": {
        "tags": ["Payroll Runs"],
        "summary": "Get Payroll Runs",
        "description": "Returns a list of PayrollRun objects.",
        "operationId": "get_payroll_runs_api_hris_v1_payroll_runs_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the payroll runs to fetch",
              "title": "Ids"
            },
            "description": "The ID of the payroll runs to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "run_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The type of the payroll run Possible values include: REGULAR, \n        OFF_CYCLE, CORRECTION, TERMINATION, SIGN_ON_BONUS. In cases where there is \n        no clear mapping, the original value passed through will be returned.",
              "title": "Run Type"
            },
            "description": "The type of the payroll run Possible values include: REGULAR, \n        OFF_CYCLE, CORRECTION, TERMINATION, SIGN_ON_BONUS. In cases where there is \n        no clear mapping, the original value passed through will be returned.",
            "example": "REGULAR"
          },
          {
            "name": "run_state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The state of the payroll run Possible values include: PAID, \n        DRAFT, APPROVED, FAILED, CLOSED. In cases where there is no clear mapping, \n        the original value passed through will be returned.",
              "title": "Run State"
            },
            "description": "The state of the payroll run Possible values include: PAID, \n        DRAFT, APPROVED, FAILED, CLOSED. In cases where there is no clear mapping, \n        the original value passed through will be returned.",
            "example": "PAID"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date From"
            },
            "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date To"
            },
            "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date From"
            },
            "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date To"
            },
            "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "check_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with check_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Check Date From"
            },
            "description": "If provided, only objects with check_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "check_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with check_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Check Date To"
            },
            "description": "If provided, only objects with check_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisPayrollRunPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/payroll-runs/{id}": {
      "get": {
        "tags": ["Payroll Runs"],
        "summary": "Get Payroll Run By Id",
        "description": "Returns a PayrollRun object with the given id.",
        "operationId": "get_payroll_run_by_id_api_hris_v1_payroll_runs__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisPayrollRun" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/payroll-run-calendars": {
      "get": {
        "tags": ["Payroll Run Calendars"],
        "summary": "Get Payroll Run Calendars",
        "description": "Returns a list of PayrollRunCalendar objects.",
        "operationId": "get_payroll_run_calendars_api_hris_v1_payroll_run_calendars_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the payroll run calendars to fetch",
              "title": "Ids"
            },
            "description": "The ID of the payroll run calendars to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisPayrollRunCalendarPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/payroll-run-calendars/{id}": {
      "get": {
        "tags": ["Payroll Run Calendars"],
        "summary": "Get Payroll Calendar Run By Id",
        "description": "Returns a PayrollRunCalendar object with the given id.",
        "operationId": "get_payroll_calendar_run_by_id_api_hris_v1_payroll_run_calendars__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisPayrollRunCalendar"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employee-payroll-runs": {
      "get": {
        "tags": ["Employee Payroll Runs"],
        "summary": "Get Employee Payroll Runs",
        "description": "Returns a list of EmployeePayrollRun objects.",
        "operationId": "get_employee_payroll_runs_api_hris_v1_employee_payroll_runs_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch employee payroll run for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch employee payroll run for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "payroll_run_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The IDs of the payroll runs to fetch employee payroll run for",
              "title": "Payroll Run Id"
            },
            "description": "The IDs of the payroll runs to fetch employee payroll run for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date From"
            },
            "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date To"
            },
            "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date From"
            },
            "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date To"
            },
            "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "check_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with check_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Check Date From"
            },
            "description": "If provided, only objects with check_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "check_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with check_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Check Date To"
            },
            "description": "If provided, only objects with check_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmployeePayrollRunPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Employee Payroll Runs"],
        "summary": "Create Employee Payroll Run",
        "description": "Creates a Employee Payroll Run object with the given values.",
        "operationId": "create_employee_payroll_run_api_hris_v1_employee_payroll_runs_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHrisEmployeePayrollRun"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/employee-payroll-runs/{id}": {
      "get": {
        "tags": ["Employee Payroll Runs"],
        "summary": "Get Employee Payroll Runs By Id",
        "description": "Returns an EmployeePayrollRun object with the given id",
        "operationId": "get_employee_payroll_runs_by_id_api_hris_v1_employee_payroll_runs__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisEmployeePayrollRun"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/time-off": {
      "get": {
        "tags": ["Time Off"],
        "summary": "Get Time Off List",
        "description": "Returns a list of TimeOff objects.",
        "operationId": "get_time_off_list_api_hris_v1_time_off_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the time offs to fetch",
              "title": "Ids"
            },
            "description": "The ID of the time offs to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch time offs for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch time offs for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisTimeOffPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Time Off"],
        "summary": "Create Time Off",
        "description": "Creates a TimeOff object with the given values.",
        "operationId": "create_time_off_api_hris_v1_time_off_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateHrisTimeOff" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/time-off/{id}": {
      "get": {
        "tags": ["Time Off"],
        "summary": "Get Time Off By Id",
        "description": "Returns a TimeOff object with the given id.",
        "operationId": "get_time_off_by_id_api_hris_v1_time_off__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisTimeOff" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/time-off-balances": {
      "get": {
        "tags": ["Time Off Balance"],
        "summary": "Get Time Off Balances List",
        "description": "Returns a list of TimeOffBalance objects.",
        "operationId": "get_time_off_balances_list_api_hris_v1_time_off_balances_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the time off balances to fetch",
              "title": "Ids"
            },
            "description": "The ID of the time off balances to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch time off balance for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch time off balance for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisTimeOffBalancePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/time-off-balances/{id}": {
      "get": {
        "tags": ["Time Off Balance"],
        "summary": "Get Time Off Balance By Id",
        "description": "Returns a TimeOffBalance object with the given id.",
        "operationId": "get_time_off_balance_by_id_api_hris_v1_time_off_balances__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisTimeOffBalance" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/passthrough": {
      "post": {
        "tags": ["Passthrough"],
        "summary": "Make Passthrough Request",
        "operationId": "make_passthrough_request_api_hris_v1_passthrough_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PassThroughRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/compensations": {
      "get": {
        "tags": ["Compensation"],
        "summary": "Get Compensations",
        "description": "Returns a list of Compensation objects.",
        "operationId": "get_compensations_api_hris_v1_compensations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the compensations to fetch",
              "title": "Ids"
            },
            "description": "The ID of the compensations to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch compensation for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch compensation for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisCompensationPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/compensations/{id}": {
      "get": {
        "tags": ["Compensation"],
        "summary": "Get Compensation By Id",
        "description": "Returns a Compensation object with the given id.",
        "operationId": "get_compensation_by_id_api_hris_v1_compensations__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisCompensation" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/timesheet-entry": {
      "get": {
        "tags": ["Timesheet Entry"],
        "summary": "Get Timesheet List",
        "description": "Returns a list of Timesheet entry objects.",
        "operationId": "get_timesheet_list_api_hris_v1_timesheet_entry_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the timesheet entries to fetch",
              "title": "Ids"
            },
            "description": "The ID of the timesheet entries to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the employees to fetch timesheet entries for",
              "title": "Employee Id"
            },
            "description": "The ID of the employees to fetch timesheet entries for",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HrisTimesheetPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Timesheet Entry"],
        "summary": "Create Timesheet",
        "description": "Creates a Time sheet object with the given values.",
        "operationId": "create_timesheet_api_hris_v1_timesheet_entry_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHrisTimeSheetEntry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/timesheet-entry/{id}": {
      "get": {
        "tags": ["Timesheet Entry"],
        "summary": "Get Timesheet By Id",
        "description": "Returns a Timesheet object with the given id.",
        "operationId": "get_timesheet_by_id_api_hris_v1_timesheet_entry__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HrisTimeSheetEntry" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/connectors": {
      "get": {
        "tags": ["Connector"],
        "summary": "Get Hris Connectors",
        "description": "Returns a list of HRIS connectors",
        "operationId": "get_hris_connectors_api_hris_v1_connectors_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The connector token for the connector",
              "title": "Connector Token"
            },
            "description": "The connector token for the connector",
            "example": "i5kqe8bSedEdPLX9pHhFojKdo7Uzvue0f7I4NVhaDfV0GTxF0uAgwa_COb3zZU3T"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filter connectors by active status",
              "title": "Is Active"
            },
            "description": "Filter connectors by active status",
            "example": true
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/connectors/{connector_id}/delete": {
      "delete": {
        "tags": ["Connector"],
        "summary": "Delete Ats Connector",
        "description": "Deletes the provided connector",
        "operationId": "delete_ats_connector_api_hris_v1_connectors__connector_id__delete_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/hris/v1/integrations": {
      "get": {
        "tags": ["Integration"],
        "summary": "Get Org Integrations",
        "description": "Returns a list of Integrations",
        "operationId": "get_org_integrations_api_hris_v1_integrations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/activities": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get Activities",
        "description": "Returns a list of Activity objects.",
        "operationId": "get_activities_api_ats_v1_activities_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the activities to fetch",
              "title": "Ids"
            },
            "description": "The ID of the activities to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The user ids of the users triggering activity",
              "title": "User"
            },
            "description": "The user ids of the users triggering activity",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "candidate",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The candidate ids concerning the activity.",
              "title": "Candidate"
            },
            "description": "The candidate ids concerning the activity.",
            "example": "01932bf2-b8bc-7bc0-bef0-1a7e2971ec31,01931edf-04b6-7391-8a5c-93ac4b395316"
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsActivityPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Activity"],
        "summary": "Create Activity",
        "description": "Creates a Activity object with the given values.",
        "operationId": "create_activity_api_ats_v1_activities_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAtsActivity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/activities/{id}": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get Activity By Id",
        "description": "Returns a Activity object with the given id.",
        "operationId": "get_activity_by_id_api_ats_v1_activities__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsActivity" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/applications": {
      "get": {
        "tags": ["Application"],
        "summary": "Get Applications",
        "description": "Returns a list of Application objects.",
        "operationId": "get_applications_api_ats_v1_applications_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the applications to fetch",
              "title": "Ids"
            },
            "description": "The ID of the applications to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "current_stage",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The current stage ids of the application",
              "title": "Current Stage"
            },
            "description": "The current stage ids of the application",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "credited_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The user ids which has the credit for the applications to fetch",
              "title": "Credited To"
            },
            "description": "The user ids which has the credit for the applications to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The source of the application",
              "title": "Source"
            },
            "description": "The source of the application",
            "example": "Linkedin"
          },
          {
            "name": "job",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The job ids for the applications to fetch",
              "title": "Job"
            },
            "description": "The job ids for the applications to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "candidate",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The candidate ids for the applications to fetch",
              "title": "Candidate"
            },
            "description": "The candidate ids for the applications to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "reject_reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The reject reason ids for the applications to fetch",
              "title": "Reject Reason"
            },
            "description": "The reject reason ids for the applications to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsApplicationPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Application"],
        "summary": "Create Application",
        "description": "Creates an Application object with the given values.",
        "operationId": "create_application_api_ats_v1_applications_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/applications/{id}": {
      "get": {
        "tags": ["Application"],
        "summary": "Get Application By Id",
        "description": "Returns an Application object with the given id.",
        "operationId": "get_application_by_id_api_ats_v1_applications__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsApplication" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/attachments": {
      "get": {
        "tags": ["Attachment"],
        "summary": "Get Attachments",
        "description": "Returns a list of Attachment objects.",
        "operationId": "get_attachments_api_ats_v1_attachments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the attachments to fetch",
              "title": "Ids"
            },
            "description": "The ID of the attachments to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "candidate",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The candidate ids for the attachments to fetch",
              "title": "Candidate"
            },
            "description": "The candidate ids for the attachments to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsAttachmentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Attachment"],
        "summary": "Create Attachment",
        "description": "Creates an Attachment object with the given values.",
        "operationId": "create_attachment_api_ats_v1_attachments_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/attachments/{id}": {
      "get": {
        "tags": ["Attachment"],
        "summary": "Get Attachment By Id",
        "description": "Returns an Attachment object with the given id.",
        "operationId": "get_attachment_by_id_api_ats_v1_attachments__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsAttachment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/candidates": {
      "get": {
        "tags": ["Candidate"],
        "summary": "Get Candidates",
        "description": "Returns a list of Candidate objects.",
        "operationId": "get_candidates_api_ats_v1_candidates_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the candidates to fetch",
              "title": "Ids"
            },
            "description": "The ID of the candidates to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return candidate for these companies",
              "title": "Company"
            },
            "description": "If provided, will only return candidate for these companies",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "first_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will return candidates with this first name",
              "title": "First Name"
            },
            "description": "If provided, will return candidates with this first name",
            "example": "Radhe"
          },
          {
            "name": "last_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will return candidates with this last name",
              "title": "Last Name"
            },
            "description": "If provided, will return candidates with this last name",
            "example": "Mohan"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will return candidates with this tag",
              "title": "Tag"
            },
            "description": "If provided, will return candidates with this tag",
            "example": "Tech Experience"
          },
          {
            "name": "email_addresses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "description": "If provided, will return candidates with these email addresses",
              "title": "Email Addresses"
            },
            "description": "If provided, will return candidates with these email addresses",
            "example": ["john@doe.com", "jane@doe.com"]
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsCandidatePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Candidate"],
        "summary": "Create Candidate",
        "description": "Creates a Candidate object with the given values.",
        "operationId": "create_candidate_api_ats_v1_candidates_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  { "$ref": "#/components/schemas/CreateCandidate" },
                  { "$ref": "#/components/schemas/AtsCandidateWrite" }
                ],
                "title": "Candidate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/candidates/create/meta": {
      "get": {
        "tags": ["Candidate"],
        "summary": "Get Create Candidate Request Body",
        "description": "Returns the data points required to add new employee in HRIS",
        "operationId": "get_create_candidate_request_body_api_ats_v1_candidates_create_meta_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaApiResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/candidates/{id}": {
      "get": {
        "tags": ["Candidate"],
        "summary": "Get Candidate By Id",
        "description": "Returns a Candidate object with the given id.",
        "operationId": "get_candidate_by_id_api_ats_v1_candidates__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsCandidate" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/candidates/{candidate_id}/attachments": {
      "post": {
        "tags": ["Candidate"],
        "summary": "Create Candidate Attachment",
        "description": "Uploads an attachment for a given candidate.",
        "operationId": "create_candidate_attachment_api_ats_v1_candidates__candidate_id__attachments_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Candidate Id" }
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AtsAttachmentWrite" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/departments": {
      "get": {
        "tags": ["Department"],
        "summary": "Get Departments",
        "description": "Returns a list of Department objects.",
        "operationId": "get_departments_api_ats_v1_departments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the departments to fetch",
              "title": "Ids"
            },
            "description": "The ID of the departments to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsDepartmentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Department"],
        "summary": "Create Department",
        "description": "Creates a Department object with the given values.",
        "operationId": "create_department_api_ats_v1_departments_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/departments/{id}": {
      "get": {
        "tags": ["Department"],
        "summary": "Get Department By Id",
        "description": "Returns a Department object with the given id.",
        "operationId": "get_department_by_id_api_ats_v1_departments__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsDepartment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/eeocs": {
      "get": {
        "tags": ["EEOC"],
        "summary": "Get Eeocs",
        "description": "Returns a list of EEOC records.",
        "operationId": "get_eeocs_api_ats_v1_eeocs_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the eeocs to fetch",
              "title": "Ids"
            },
            "description": "The ID of the eeocs to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "candidate",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The candidates id for the eeocs to fetch",
              "title": "Candidate"
            },
            "description": "The candidates id for the eeocs to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsEEOCPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["EEOC"],
        "summary": "Create Eeoc",
        "description": "Creates an EEOC record with the given values.",
        "operationId": "create_eeoc_api_ats_v1_eeocs_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/eeocs/{id}": {
      "get": {
        "tags": ["EEOC"],
        "summary": "Get Eeoc By Id",
        "description": "Returns an EEOC record with the given id.",
        "operationId": "get_eeoc_by_id_api_ats_v1_eeocs__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsEEOC" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/job-interview-stages": {
      "get": {
        "tags": ["Job Interview Stage"],
        "summary": "Get Job Interview Stages",
        "description": "Returns a list of Job Interview Stage objects.",
        "operationId": "get_job_interview_stages_api_ats_v1_job_interview_stages_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the job interview stages to fetch",
              "title": "Ids"
            },
            "description": "The ID of the job interview stages to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "job",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Return the stages for the given jobids",
              "title": "Job"
            },
            "description": "Return the stages for the given jobids",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsJobInterviewStagePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Job Interview Stage"],
        "summary": "Create Job Interview Stage",
        "description": "Creates a Job Interview Stage object with the given values.",
        "operationId": "create_job_interview_stage_api_ats_v1_job_interview_stages_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/job-interview-stages/{id}": {
      "get": {
        "tags": ["Job Interview Stage"],
        "summary": "Get Job Interview Stage By Id",
        "description": "Returns a Job Interview Stage object with the given id.",
        "operationId": "get_job_interview_stage_by_id_api_ats_v1_job_interview_stages__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsJobInterviewStage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/jobs": {
      "get": {
        "tags": ["Job"],
        "summary": "Get Jobs",
        "description": "Returns a list of Job objects.",
        "operationId": "get_jobs_api_ats_v1_jobs_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the jobs to fetch",
              "title": "Ids"
            },
            "description": "The ID of the jobs to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will return jobs with this code",
              "title": "Code"
            },
            "description": "If provided, will return jobs with this code",
            "example": "DEV-01"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ATSStatusType",
              "description": "If provided, will return jobs with this status"
            },
            "description": "If provided, will return jobs with this status",
            "example": "OPEN"
          },
          {
            "name": "offices",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will return jobs in these offices",
              "title": "Offices"
            },
            "description": "If provided, will return jobs in these offices",
            "example": "0194bcb7-bf3e-7315-8628-0dc9bf1b6d92,0194bcb7-bf3e-7315-8628-0dc9bf1b6d92"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsJobPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Job"],
        "summary": "Create Job",
        "description": "Creates a Job object with the given values.",
        "operationId": "create_job_api_ats_v1_jobs_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/jobs/{id}": {
      "get": {
        "tags": ["Job"],
        "summary": "Get Job By Id",
        "description": "Returns a Job object with the given id.",
        "operationId": "get_job_by_id_api_ats_v1_jobs__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsJob" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/offers": {
      "get": {
        "tags": ["Offer"],
        "summary": "Get Offers",
        "description": "Returns a list of Offer objects.",
        "operationId": "get_offers_api_ats_v1_offers_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the offers to fetch",
              "title": "Ids"
            },
            "description": "The ID of the offers to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "application",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The application id of the offer",
              "title": "Application"
            },
            "description": "The application id of the offer",
            "example": "0194bcb7-bf3e-7315-8628-0dc9bf1b6d92"
          },
          {
            "name": "creator",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The creator for the offers to fetch",
              "title": "Creator"
            },
            "description": "The creator for the offers to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsOfferPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer"],
        "summary": "Create Offer",
        "description": "Creates an Offer object with the given values.",
        "operationId": "create_offer_api_ats_v1_offers_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/offers/{id}": {
      "get": {
        "tags": ["Offer"],
        "summary": "Get Offer By Id",
        "description": "Returns an Offer object with the given id.",
        "operationId": "get_offer_by_id_api_ats_v1_offers__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsOffer" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/offices": {
      "get": {
        "tags": ["Office"],
        "summary": "Get Offices",
        "description": "Returns a list of Office objects.",
        "operationId": "get_offices_api_ats_v1_offices_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the offices to fetch",
              "title": "Ids"
            },
            "description": "The ID of the offices to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object.",
            "example": "3235005483341316245"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsOfficePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Office"],
        "summary": "Create Office",
        "description": "Creates an Office object with the given values.",
        "operationId": "create_office_api_ats_v1_offices_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/offices/{id}": {
      "get": {
        "tags": ["Office"],
        "summary": "Get Office By Id",
        "description": "Returns an Office object with the given id.",
        "operationId": "get_office_by_id_api_ats_v1_offices__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsOffice" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/reject-reasons": {
      "get": {
        "tags": ["Reject Reason"],
        "summary": "Get Reject Reasons",
        "description": "Returns a list of RejectReason objects.",
        "operationId": "get_reject_reasons_api_ats_v1_reject_reasons_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the reject reasons to fetch",
              "title": "Ids"
            },
            "description": "The ID of the reject reasons to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsRejectReasonPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reject Reason"],
        "summary": "Create Reject Reason",
        "description": "Creates a RejectReason object with the given values.",
        "operationId": "create_reject_reason_api_ats_v1_reject_reasons_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/reject-reasons/{id}": {
      "get": {
        "tags": ["Reject Reason"],
        "summary": "Get Reject Reason By Id",
        "description": "Returns a RejectReason object with the given id.",
        "operationId": "get_reject_reason_by_id_api_ats_v1_reject_reasons__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsRejectReason" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/remote-users": {
      "get": {
        "tags": ["Remote User"],
        "summary": "Get Remote Users",
        "description": "Returns a list of RemoteUser objects.",
        "operationId": "get_remote_users_api_ats_v1_remote_users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the remote users to fetch",
              "title": "Ids"
            },
            "description": "The ID of the remote users to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Email id of the user",
              "title": "Email"
            },
            "description": "Email id of the user",
            "example": "john@doe.com"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsRemoteUserPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Remote User"],
        "summary": "Create Remote User",
        "description": "Creates a RemoteUser object with the given values.",
        "operationId": "create_remote_user_api_ats_v1_remote_users_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/remote-users/{id}": {
      "get": {
        "tags": ["Remote User"],
        "summary": "Get Remote User By Id",
        "description": "Returns a RemoteUser object with the given id.",
        "operationId": "get_remote_user_by_id_api_ats_v1_remote_users__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsRemoteUser" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/scheduled-interviews": {
      "get": {
        "tags": ["Scheduled Interview"],
        "summary": "Get Scheduled Interviews",
        "description": "Returns a list of ScheduledInterview objects.",
        "operationId": "get_scheduled_interviews_api_ats_v1_scheduled_interviews_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the scheduled interviews to fetch",
              "title": "Ids"
            },
            "description": "The ID of the scheduled interviews to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "application",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Application id of the scheduled interview",
              "title": "Application"
            },
            "description": "Application id of the scheduled interview",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "organizer",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "User id of the organizers for the scheduled interview to fetch",
              "title": "Organizer"
            },
            "description": "User id of the organizers for the scheduled interview to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "job_interview_stage",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Job interview stage id of the scheduled interviews",
              "title": "Job Interview Stage"
            },
            "description": "Job interview stage id of the scheduled interviews",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsScheduledInterviewPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Scheduled Interview"],
        "summary": "Create Scheduled Interview",
        "description": "Creates a ScheduledInterview object with the given values.",
        "operationId": "create_scheduled_interview_api_ats_v1_scheduled_interviews_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/scheduled-interviews/{id}": {
      "get": {
        "tags": ["Scheduled Interview"],
        "summary": "Get Scheduled Interview By Id",
        "description": "Returns a ScheduledInterview object with the given id.",
        "operationId": "get_scheduled_interview_by_id_api_ats_v1_scheduled_interviews__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsScheduledInterview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/scorecards": {
      "get": {
        "tags": ["Scorecard"],
        "summary": "Get Scorecards",
        "description": "Returns a list of Scorecard objects.",
        "operationId": "get_scorecards_api_ats_v1_scorecards_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the scorecards to fetch",
              "title": "Ids"
            },
            "description": "The ID of the scorecards to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "application",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The application id for the scorecard",
              "title": "Application"
            },
            "description": "The application id for the scorecard",
            "example": "0194bcb7-bf3e-7315-8628-0dc9bf1b6d92"
          },
          {
            "name": "interview",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The interview ids for the scorecards to fetch",
              "title": "Interview"
            },
            "description": "The interview ids for the scorecards to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "interviewer",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The interviewer ids for the scorecards to fetch",
              "title": "Interviewer"
            },
            "description": "The interviewer ids for the scorecards to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsScorecardPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Scorecard"],
        "summary": "Create Scorecard",
        "description": "Creates a Scorecard object with the given values.",
        "operationId": "create_scorecard_api_ats_v1_scorecards_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/scorecards/{id}": {
      "get": {
        "tags": ["Scorecard"],
        "summary": "Get Scorecard By Id",
        "description": "Returns a Scorecard object with the given id.",
        "operationId": "get_scorecard_by_id_api_ats_v1_scorecards__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsScorecard" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/screening-questions": {
      "get": {
        "tags": ["Screening Question"],
        "summary": "Get Screening Questions",
        "description": "Returns a list of ScreeningQuestion objects.",
        "operationId": "get_screening_questions_api_ats_v1_screening_questions_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the screening questions to fetch",
              "title": "Ids"
            },
            "description": "The ID of the screening questions to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "job",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The job ids for the screening questions to fetch",
              "title": "Job"
            },
            "description": "The job ids for the screening questions to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsScreeningQuestionPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Screening Question"],
        "summary": "Create Screening Question",
        "description": "Creates a ScreeningQuestion object with the given values.",
        "operationId": "create_screening_question_api_ats_v1_screening_questions_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/screening-questions/{id}": {
      "get": {
        "tags": ["Screening Question"],
        "summary": "Get Screening Question By Id",
        "description": "Returns a ScreeningQuestion object with the given id.",
        "operationId": "get_screening_question_by_id_api_ats_v1_screening_questions__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsScreeningQuestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/tags": {
      "get": {
        "tags": ["Tag"],
        "summary": "Get Tags",
        "description": "Returns a list of Tag objects.",
        "operationId": "get_tags_api_ats_v1_tags_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The ID of the tags to fetch",
              "title": "Ids"
            },
            "description": "The ID of the tags to fetch",
            "example": "01931edf-04b6-7391-8a5c-93ac4b395316,01931edf-04c8-7649-a470-d85f6161bd1a"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "modified_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Modified After"
            },
            "description": "If provided, only objects synced by Bindbee after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtsTagPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tag"],
        "summary": "Create Tag",
        "description": "Creates a Tag object with the given values.",
        "operationId": "create_tag_api_ats_v1_tags_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/tags/{id}": {
      "get": {
        "tags": ["Tag"],
        "summary": "Get Tag By Id",
        "description": "Returns a Tag object with the given id.",
        "operationId": "get_tag_by_id_api_ats_v1_tags__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw data in the response",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Include raw data in the response",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtsTag" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/connectors": {
      "get": {
        "tags": ["Connector"],
        "summary": "Get Ats Connectors",
        "description": "Returns a list of ATS connectors",
        "operationId": "get_ats_connectors_api_ats_v1_connectors_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The connector token for the connector",
              "title": "Connector Token"
            },
            "description": "The connector token for the connector",
            "example": "i5kqe8bSedEdPLX9pHhFojKdo7Uzvue0f7I4NVhaDfV0GTxF0uAgwa_COb3zZU3T"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filter connectors by active status",
              "title": "Is Active"
            },
            "description": "Filter connectors by active status",
            "example": true
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/connectors/{connector_id}/delete": {
      "delete": {
        "tags": ["Connector"],
        "summary": "Delete Ats Connector",
        "description": "Deletes the provided connector",
        "operationId": "delete_ats_connector_api_ats_v1_connectors__connector_id__delete_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/ats/v1/integrations": {
      "get": {
        "tags": ["Integration"],
        "summary": "Get Org Integrations",
        "description": "Returns a list of Integrations",
        "operationId": "get_org_integrations_api_ats_v1_integrations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/vms/v1/job-posting": {
      "get": {
        "tags": ["Job Posting"],
        "summary": "Get Job Posting List",
        "description": "Returns a list of JobPosting objects.",
        "operationId": "get_job_posting_list_api_vms_v1_job_posting_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Remote Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Raw Data"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VmsJobPostingPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Job Seeker"],
        "summary": "Create Job Seeker",
        "description": "Creates a JobSeeker object with the given values.",
        "operationId": "create_job_seeker_api_vms_v1_job_posting_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VmsJobSeekerCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/vms/v1/job-posting/{id}": {
      "get": {
        "tags": ["Job Posting"],
        "summary": "Get Job Posting By Id",
        "description": "Returns a JobPosting object with the given id.",
        "operationId": "get_job_posting_by_id_api_vms_v1_job_posting__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Raw Data"
            }
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VmsJobPosting" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/vms/v1/job-seeker": {
      "get": {
        "tags": ["Job Seeker"],
        "summary": "Get Job Seeker List",
        "description": "Returns a list of active JobSeeker objects.",
        "operationId": "get_job_seeker_list_api_vms_v1_job_seeker_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Remote Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Raw Data"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VmsJobSeekerPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/vms/v1/work-order": {
      "get": {
        "tags": ["Work Order"],
        "summary": "Get Work Order List",
        "description": "Returns a list of active Work order objects.",
        "operationId": "get_work_order_list_api_vms_v1_work_order_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Remote Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Raw Data"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VmsJobWorkOrderAcceptPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/vms/v1/work-order-accept": {
      "post": {
        "tags": ["Work Order"],
        "summary": "Create Work Order",
        "description": "Creates a work order with the given values.",
        "operationId": "create_work_order_api_vms_v1_work_order_accept_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VmsWorkOrderAcceptCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Lms Users",
        "description": "Returns a list of LMS User objects.",
        "operationId": "get_lms_users_api_lms_v1_users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return users for these IDs.",
              "title": "Ids"
            },
            "description": "If provided, will only return users for these IDs.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "email_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will only return users for this email address.",
              "title": "Email Address"
            },
            "description": "If provided, will only return users for this email address.",
            "example": "john@doe.com"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSUserStatus",
              "description": "If provided, will only return enrollments for this status."
            },
            "description": "If provided, will only return enrollments for this status.",
            "example": "ACTIVE"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsUserPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Lms User By Id",
        "description": "Returns an LMS User object with the given id.",
        "operationId": "get_lms_user_by_id_api_lms_v1_users__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsUser" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/courses": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get Lms Courses",
        "description": "Returns a list of LMS Course objects.",
        "operationId": "get_lms_courses_api_lms_v1_courses_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSCourseStatus",
              "description": "If provided, will only return courses with this status."
            },
            "description": "If provided, will only return courses with this status.",
            "example": "ACTIVE"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return courses with these IDs",
              "title": "Ids"
            },
            "description": "If provided, will only return courses with these IDs",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will return courses with these categories",
              "title": "Categories"
            },
            "description": "If provided, will return courses with these categories",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will return courses with these skills",
              "title": "Skills"
            },
            "description": "If provided, will return courses with these skills",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "instructors",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will return courses with these instructors",
              "title": "Instructors"
            },
            "description": "If provided, will return courses with these instructors",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "contents",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will return courses with these contents",
              "title": "Contents"
            },
            "description": "If provided, will return courses with these contents",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "languages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will return courses with these languages",
              "title": "Languages"
            },
            "description": "If provided, will return courses with these languages",
            "example": "en_US,en_UK"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsCoursePaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/courses/{id}": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get Lms Course By Id",
        "description": "Returns an LMS Course object with the given id.",
        "operationId": "get_lms_course_by_id_api_lms_v1_courses__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsCourse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/contents": {
      "get": {
        "tags": ["Contents"],
        "summary": "Get Lms Contents",
        "description": "Returns a list of LMS Content objects.",
        "operationId": "get_lms_contents_api_lms_v1_contents_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return contents for these IDs.",
              "title": "Ids"
            },
            "description": "If provided, will only return contents for these IDs.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "courses",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return contents for these courses.",
              "title": "Courses"
            },
            "description": "If provided, will only return contents for these courses.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return contents for these skills.",
              "title": "Skills"
            },
            "description": "If provided, will only return contents for these skills.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return contents for these categories.",
              "title": "Categories"
            },
            "description": "If provided, will only return contents for these categories.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          {
            "name": "languages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, will only return contents for these languages.",
              "title": "Languages"
            },
            "description": "If provided, will only return contents for these languages.",
            "example": "en_US,en_UK"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSContentStatus",
              "description": "If provided, will only return contents for this status."
            },
            "description": "If provided, will only return contents for this status.",
            "example": "ACTIVE"
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsContentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/contents/{id}": {
      "get": {
        "tags": ["Contents"],
        "summary": "Get Lms Content By Id",
        "description": "Returns an LMS Content object with the given id.",
        "operationId": "get_lms_content_by_id_api_lms_v1_contents__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsContent" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/skills": {
      "get": {
        "tags": ["Skills"],
        "summary": "Get Lms Skills",
        "description": "Returns a list of LMS Skill objects.",
        "operationId": "get_lms_skills_api_lms_v1_skills_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return skills for these IDs.",
              "title": "Ids"
            },
            "description": "If provided, will only return skills for these IDs.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSSkillStatus",
              "description": "If provided, will only return skills with this status."
            },
            "description": "If provided, will only return skills with this status.",
            "example": "ACTIVE"
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsSkillPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/skills/{id}": {
      "get": {
        "tags": ["Skills"],
        "summary": "Get Lms Skill By Id",
        "description": "Returns an LMS Skill object with the given id.",
        "operationId": "get_lms_skill_by_id_api_lms_v1_skills__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsSkill" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get Lms Categories",
        "description": "Returns a list of LMS Category objects.",
        "operationId": "get_lms_categories_api_lms_v1_categories_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "A comma-separated list of LMS Category IDs to filter by.",
              "title": "Ids"
            },
            "description": "A comma-separated list of LMS Category IDs to filter by."
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSCategoryStatus",
              "description": "If provided, will only return categories with this status."
            },
            "description": "If provided, will only return categories with this status.",
            "example": "ACTIVE"
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsCategoryPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get Lms Category By Id",
        "description": "Returns an LMS Category object with the given id.",
        "operationId": "get_lms_category_by_id_api_lms_v1_categories__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsCategory" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/completions": {
      "get": {
        "tags": ["Completions"],
        "summary": "Get Lms Completions",
        "description": "Returns a list of LMS Completion objects.",
        "operationId": "get_lms_completions_api_lms_v1_completions_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "A comma-separated list of LMS Completion IDs to filter by.",
              "title": "Ids"
            },
            "description": "A comma-separated list of LMS Completion IDs to filter by.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "course",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return completions for these courses.",
              "title": "Course"
            },
            "description": "If provided, will only return completions for these courses.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return completions for these users.",
              "title": "User"
            },
            "description": "If provided, will only return completions for these users.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return completions for these contents.",
              "title": "Content"
            },
            "description": "If provided, will only return completions for these contents.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "grade",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LMSGrade",
              "description": "If provided, will only return completions for this grade."
            },
            "description": "If provided, will only return completions for this grade.",
            "example": "A"
          },
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "started_at_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with started_at same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Started At From"
            },
            "description": "If provided, only objects with started_at same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "started_at_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with started_at same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Started At To"
            },
            "description": "If provided, only objects with started_at same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "completed_at_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with completed_at same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Completed At From"
            },
            "description": "If provided, only objects with completed_at same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "completed_at_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with completed_at same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Completed At To"
            },
            "description": "If provided, only objects with completed_at same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsCompletionPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/completions/{id}": {
      "get": {
        "tags": ["Completions"],
        "summary": "Get Lms Completion By Id",
        "description": "Returns an LMS Completion object with the given id.",
        "operationId": "get_lms_completion_by_id_api_lms_v1_completions__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsCompletion" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/enrollments": {
      "get": {
        "tags": ["Enrollments"],
        "summary": "Get Lms Enrollments",
        "description": "Returns a list of LMS Enrollment objects.",
        "operationId": "get_lms_enrollments_api_lms_v1_enrollments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "remote_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The third-party API ID of the matching object.",
              "title": "Remote Id"
            },
            "description": "The third-party API ID of the matching object."
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return enrollments for these IDs.",
              "title": "Ids"
            },
            "description": "If provided, will only return enrollments for these IDs.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return enrollments for these users.",
              "title": "User"
            },
            "description": "If provided, will only return enrollments for these users.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "course",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "If provided, will only return enrollments for these courses.",
              "title": "Course"
            },
            "description": "If provided, will only return enrollments for these courses.",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6,018b18ef-c487-703c-afd9-0ca478ccd9d7"
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "start_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date From"
            },
            "description": "If provided, only objects with start_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "Start Date To"
            },
            "description": "If provided, only objects with start_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date From"
            },
            "description": "If provided, only objects with end_date same or after this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "end_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
              "title": "End Date To"
            },
            "description": "If provided, only objects with end_date same or before this date time will be returned. Format: DateTime (ISO 8601)",
            "example": "2024-02-21T21:22:12.993Z"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LmsEnrollmentPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/enrollments/{id}": {
      "get": {
        "tags": ["Enrollments"],
        "summary": "Get Lms Enrollment By Id",
        "description": "Returns an LMS Enrollment object with the given id.",
        "operationId": "get_lms_enrollment_by_id_api_lms_v1_enrollments__id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "include_raw_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
              "default": false,
              "title": "Include Raw Data"
            },
            "description": "Whether to include the original data Bindbee fetched from the third-party to produce these models.",
            "example": false
          },
          {
            "name": "include_custom_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include custom fields in the response.",
              "default": false,
              "title": "Include Custom Fields"
            },
            "description": "Whether to include custom fields in the response.",
            "example": false
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
              "title": "Expand"
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. You can also specify required fields in [] for each relation name.",
            "example": "manager[first_name,last_name]"
          },
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LmsEnrollment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/connectors": {
      "get": {
        "tags": ["Connector"],
        "summary": "Get Lms Connectors",
        "description": "Returns a list of LMS connectors",
        "operationId": "get_lms_connectors_api_lms_v1_connectors_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The connector token for the connector",
              "title": "Connector Token"
            },
            "description": "The connector token for the connector",
            "example": "i5kqe8bSedEdPLX9pHhFojKdo7Uzvue0f7I4NVhaDfV0GTxF0uAgwa_COb3zZU3T"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filter connectors by active status",
              "title": "Is Active"
            },
            "description": "Filter connectors by active status",
            "example": true
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/connectors/{connector_id}/delete": {
      "delete": {
        "tags": ["Connector"],
        "summary": "Delete Lms Connector",
        "description": "Deletes the provided connector",
        "operationId": "delete_lms_connector_api_lms_v1_connectors__connector_id__delete_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "connector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lms/v1/integrations": {
      "get": {
        "tags": ["Integration"],
        "summary": "Get Org Integrations",
        "description": "Returns a list of Integrations",
        "operationId": "get_org_integrations_api_lms_v1_integrations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results to return per page. Maximum size is 100.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of results to return per page. Maximum size is 100."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The pagination cursor value.",
              "title": "Cursor"
            },
            "description": "The pagination cursor value."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/passthrough": {
      "post": {
        "tags": ["Passthrough"],
        "summary": "Make Passthrough Request",
        "operationId": "make_passthrough_request_api_v1_passthrough_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PassThroughRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/embedded/v1/link/create-link-token": {
      "post": {
        "tags": ["Link"],
        "summary": "Create Link Token",
        "operationId": "create_link_token_api_embedded_v1_link_create_link_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LinkTokenCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/embedded/v1/connectors/connector_token/{temporary_token}": {
      "get": {
        "tags": ["Connector"],
        "summary": "Get Connector Token",
        "operationId": "get_connector_token_api_embedded_v1_connectors_connector_token__temporary_token__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "temporary_token",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Temporary Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/embedded/v1/connectors/resync": {
      "post": {
        "tags": ["Connector"],
        "summary": "Force Resync Connector",
        "operationId": "force_resync_connector_api_embedded_v1_connectors_resync_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "x-connector-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Connector-Token" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ATSStatusType": {
        "type": "string",
        "enum": ["OPEN", "CLOSED", "DRAFT", "ARCHIVED", "PENDING", "-"],
        "title": "ATSStatusType"
      },
      "AtsActivity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "user": {
            "anyOf": [{}, { "type": "null" }],
            "title": "User",
            "description": "The user who owns the activity.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "activity_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Activity Type",
            "description": "The type of activity.",
            "example": "NOTE"
          },
          "subject": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Subject",
            "description": "The subject of the activity.",
            "example": "Interview with John Doe"
          },
          "body": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Body",
            "description": "The body of the activity. This can include notes, comments, or other relevant information.",
            "example": "John Doe was interviewed for the position of Software Engineer."
          },
          "visibility": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Visibility",
            "description": "Visibility of the activity. Can be PUBLIC/PRIVATE",
            "example": "PUBLIC"
          },
          "candidate": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Candidate",
            "description": "Candidate who applied for the activity.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the third party's candidate was created.",
            "example": "2021-07-01T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "user",
          "activity_type",
          "subject",
          "body",
          "visibility",
          "candidate",
          "remote_created_at"
        ],
        "title": "AtsActivity",
        "description": "The activity object is used to represent any activity in the ATS."
      },
      "AtsActivityPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsActivity" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsActivityPaginatedResponse"
      },
      "AtsApplication": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "candidate": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Candidate",
            "description": "The candidate associated with the application.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "job": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Job",
            "description": "The job for which the candidate has applied.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "applied_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Applied At",
            "description": "The date and time when the candidate applied for the job.",
            "example": "2021-01-01T00:00:00Z"
          },
          "rejected_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rejected At",
            "description": "The date and time when the application was rejected.",
            "example": "2021-01-01T00:00:00Z"
          },
          "source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source",
            "description": "The source from where the candidate's application originated.",
            "example": "LinkedIn"
          },
          "credited_to": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Credited To",
            "description": "The user or entity to which the application is credited.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "current_stage": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Current Stage",
            "description": "The current stage of the application in the hiring process.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "reject_reason": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Reject Reason",
            "description": "The reason for the application's rejection.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "candidate",
          "job",
          "applied_at",
          "rejected_at",
          "source",
          "credited_to",
          "current_stage",
          "reject_reason"
        ],
        "title": "AtsApplication",
        "description": "The AtsApplication object is used to represent an application within the ATS."
      },
      "AtsApplicationPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsApplication" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsApplicationPaginatedResponse"
      },
      "AtsAttachment": {
        "properties": {
          "file_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Name",
            "description": "The name of the file attached.",
            "example": "resume.pdf"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "File Url",
            "description": "The URL where the file is stored and can be retrieved.",
            "example": "https://example.com/path/to/resume.pdf"
          },
          "attachment_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Attachment Type",
            "description": "The type of attachment, such as 'resume', 'cover letter', etc.",
            "example": "RESUME"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "candidate": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Candidate",
            "description": "The candidate to whom the attachment belongs.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "AtsAttachment"
      },
      "AtsAttachmentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsAttachment" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsAttachmentPaginatedResponse"
      },
      "AtsAttachmentWrite": {
        "properties": {
          "file_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Name",
            "description": "The name of the file attached.",
            "example": "resume.pdf"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "File Url",
            "description": "The URL where the file is stored and can be retrieved.",
            "example": "https://example.com/path/to/resume.pdf"
          },
          "attachment_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Attachment Type",
            "description": "The type of attachment, such as 'resume', 'cover letter', etc.",
            "example": "RESUME"
          },
          "file_content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Content",
            "description": "File in base64 format",
            "example": "SGVsbG8sIFdvcmxkIQ=="
          },
          "content_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content Type",
            "description": "The MIME type of the file (e.g., 'application/pdf', 'image/png').",
            "example": "application/pdf"
          },
          "candidate": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Candidate",
            "description": "The candidate to whom the attachment belongs.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "remote_user_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Remote User Id",
            "description": "The id of user using the integration",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "title": "AtsAttachmentWrite",
        "description": "The AtsAttachmentWriteForCandidate object is used to represent a file attachment linked to a candidate's application within the ATS."
      },
      "AtsCandidate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The candidate's first name.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The candidate's last name.",
            "example": "Doe"
          },
          "company": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Company",
            "description": "The name of the company where candidate has applied.",
            "example": "Google"
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title",
            "description": "The position for which the candidate has applied",
            "example": "SOFTWARE ENGINEER"
          },
          "last_interaction_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Interaction At",
            "description": "The date of the last interaction with the candidate.",
            "example": "2021-07-01T00:00:00Z"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Private",
            "description": "Whether the candidate's information is private.",
            "example": true
          },
          "can_email": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Can Email",
            "description": "Whether the candidate can be emailed.",
            "example": true
          },
          "locations": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Locations",
            "description": "The location of the candidate.",
            "example": ["San Francisco", "New York"]
          },
          "phone_numbers": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Phone Numbers",
            "description": "The candidate's phone numbers.",
            "example": ["123-456-7890"]
          },
          "email_addresses": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Email Addresses",
            "description": "The candidate's email addresses.",
            "example": ["john@doe.com"]
          },
          "urls": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AtsUrl" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Urls",
            "description": "The candidate's URLs. This can include a personal website, LinkedIn profile, or other relevant URLs.",
            "example": [
              {
                "type": "LINKEDIN",
                "value": "https://www.linkedin.com/in/johndoe"
              }
            ]
          },
          "tags": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Tags",
            "description": "The candidate's tags. Tags are used to categorize candidates and can be used to filter candidates in the UI.",
            "example": ["JUNIOR", "INTERMEDIATE"]
          },
          "applications": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Applications",
            "description": "The candidate's applications.",
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          },
          "attachments": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Attachments",
            "description": "The candidate's attachments.",
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the third party's candidate was created.",
            "example": "2021-07-01T00:00:00Z"
          },
          "remote_updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Updated At",
            "description": "When the third party's candidate was last updated.",
            "example": "2021-07-01T00:00:00Z"
          },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Avatar",
            "description": "The candidate's avatar.",
            "example": "https://www.example.com/avatar.jpg"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "AtsCandidate"
      },
      "AtsCandidatePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsCandidate" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsCandidatePaginatedResponse"
      },
      "AtsCandidateWrite": {
        "properties": {
          "additional_attributes": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Additional Attributes",
            "description": "Fields related to models other than employee Model",
            "example": {
              "contract_end_date": "2025-12-31T00:00:00",
              "previous_employer": "TechCorp"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": { "customTshirtSize": "XXL" }
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The candidate's first name.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The candidate's last name.",
            "example": "Doe"
          },
          "company": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Company",
            "description": "The name of the company where candidate has applied.",
            "example": "Google"
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title",
            "description": "The position for which the candidate has applied",
            "example": "SOFTWARE ENGINEER"
          },
          "last_interaction_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Interaction At",
            "description": "The date of the last interaction with the candidate.",
            "example": "2021-07-01T00:00:00Z"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Private",
            "description": "Whether the candidate's information is private.",
            "example": true
          },
          "can_email": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Can Email",
            "description": "Whether the candidate can be emailed.",
            "example": true
          },
          "locations": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Locations",
            "description": "The location of the candidate.",
            "example": ["San Francisco", "New York"]
          },
          "phone_numbers": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Phone Numbers",
            "description": "The candidate's phone numbers.",
            "example": ["123-456-7890"]
          },
          "email_addresses": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Email Addresses",
            "description": "The candidate's email addresses.",
            "example": ["john@doe.com"]
          },
          "urls": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AtsUrl" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Urls",
            "description": "The candidate's URLs. This can include a personal website, LinkedIn profile, or other relevant URLs.",
            "example": [
              {
                "type": "LINKEDIN",
                "value": "https://www.linkedin.com/in/johndoe"
              }
            ]
          },
          "tags": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Tags",
            "description": "The candidate's tags. Tags are used to categorize candidates and can be used to filter candidates in the UI.",
            "example": ["JUNIOR", "INTERMEDIATE"]
          },
          "applications": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Applications",
            "description": "The candidate's applications.",
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          },
          "attachments": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AtsAttachmentWrite" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Attachments",
            "description": "Please share the details like this, AtsAttachmentWrite model fields are shared in model_fields key"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the third party's candidate was created.",
            "example": "2021-07-01T00:00:00Z"
          },
          "remote_updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Updated At",
            "description": "When the third party's candidate was last updated.",
            "example": "2021-07-01T00:00:00Z"
          },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Avatar",
            "description": "The candidate's avatar.",
            "example": "https://www.example.com/avatar.jpg"
          },
          "job": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Job",
            "description": "The job id for the candidate",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "title": "AtsCandidateWrite"
      },
      "AtsDepartment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the department.",
            "example": "Engineering"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields", "name"],
        "title": "AtsDepartment",
        "description": "The AtsDepartment object represents a department within the company in the ATS."
      },
      "AtsDepartmentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsDepartment" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsDepartmentPaginatedResponse"
      },
      "AtsEEOC": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "candidate": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Candidate",
            "description": "The candidate associated with the EEOC data.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "submitted_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Submitted At",
            "description": "The ISO date string when the EEOC data was submitted.",
            "example": "2021-01-01T00:00:00Z"
          },
          "race": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Race",
            "description": "The race of the candidate as indicated in the EEOC form.",
            "example": "WHITE"
          },
          "gender": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Gender",
            "description": "The gender of the candidate as indicated in the EEOC form.",
            "example": "MALE"
          },
          "veteran_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Veteran Status",
            "description": "The veteran status of the candidate as indicated in the EEOC form.",
            "example": "DISABLED"
          },
          "disability_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Disability Status",
            "description": "The disability status of the candidate as indicated in the EEOC form.",
            "example": "YES"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "candidate",
          "submitted_at",
          "race",
          "gender",
          "veteran_status",
          "disability_status"
        ],
        "title": "AtsEEOC",
        "description": "The AtsEEOC object represents the Equal Employment Opportunity Commission (EEOC) related data for a candidate within the ATS."
      },
      "AtsEEOCPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsEEOC" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsEEOCPaginatedResponse"
      },
      "AtsJob": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the job.",
            "example": "SOFTWARE ENGINEER"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "A detailed description of the job.",
            "example": "We are looking for a software engineer to join our team."
          },
          "code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Code",
            "description": "The internal or external code that identifies the job.",
            "example": "SE-2021-01"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The current status of the job posting.",
            "example": "OPEN"
          },
          "job_posting_urls": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AtsUrl" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Job Posting Urls",
            "description": "A list of URLs where the job is posted.",
            "example": ["https://www.company.com/careers/software-engineer"]
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "The ISO date string when the job was first created in the ATS.",
            "example": "2021-01-01T00:00:00Z"
          },
          "remote_updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Updated At",
            "description": "The ISO date string when the job was last updated in the ATS.",
            "example": "2021-01-01T00:00:00Z"
          },
          "confidential": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Confidential",
            "description": "Whether the job posting is confidential.",
            "example": false
          },
          "departments": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Departments",
            "description": "A list of department identifiers associated with the job.",
            "example": [
              "018b4bfb-5ece-70b1-ad5e-862a9433aa65",
              "018b4bfb-5ece-70b1-ad5e-862a9433aa23"
            ]
          },
          "offices": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Offices",
            "description": "A list of office identifiers where the job is located.",
            "example": [
              "018b4bfb-5ece-70b1-ad5e-862a9433aa65",
              "018b4bfb-5ece-70b1-ad5e-862a9433aa23"
            ]
          },
          "hiring_managers": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Hiring Managers",
            "description": "A list of identifiers for hiring managers associated with the job.",
            "example": [
              "018b4bfb-5ece-70b1-ad5e-862a9433aa65",
              "018b4bfb-5ece-70b1-ad5e-862a9433aa23"
            ]
          },
          "recruiters": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Recruiters",
            "description": "A list of identifiers for recruiters associated with the job.",
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "name",
          "description",
          "code",
          "status",
          "job_posting_urls",
          "remote_created_at",
          "remote_updated_at",
          "confidential",
          "departments",
          "offices",
          "hiring_managers",
          "recruiters"
        ],
        "title": "AtsJob",
        "description": "The AtsJob object represents a job posting within the ATS."
      },
      "AtsJobInterviewStage": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the interview stage.",
            "example": "PHONE SCREENING"
          },
          "job": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Job",
            "description": "The identifier of the job to which this interview stage is related.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "stage_order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stage Order",
            "description": "The order or sequence number of the stage within the interview process.",
            "example": 3
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "name",
          "job",
          "stage_order"
        ],
        "title": "AtsJobInterviewStage",
        "description": "The AtsJobInterviewStage object represents a stage in the interview process for a job within the ATS."
      },
      "AtsJobInterviewStagePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsJobInterviewStage" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsJobInterviewStagePaginatedResponse"
      },
      "AtsJobPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsJob" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsJobPaginatedResponse"
      },
      "AtsOffer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "application": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Application",
            "description": "The identifier of the application to which the offer is related.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "creator": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Creator",
            "description": "The identifier of the user who created the offer.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "The ISO date string when the offer was created in the third-party system.",
            "example": "2021-01-01T00:00:00Z"
          },
          "closed_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Closed At",
            "description": "The ISO date string when the offer was closed.",
            "example": "2021-01-01T00:00:00Z"
          },
          "sent_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sent At",
            "description": "The ISO date string when the offer was sent to the candidate.",
            "example": "2021-01-01T00:00:00Z"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The proposed start date for the candidate, as an ISO date string.",
            "example": "2021-01-01T00:00:00Z"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The current status of the offer.",
            "example": "ACCEPTED"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "application",
          "creator",
          "remote_created_at",
          "closed_at",
          "sent_at",
          "start_date",
          "status"
        ],
        "title": "AtsOffer",
        "description": "The AtsOffer object represents a job offer associated with an application within the ATS."
      },
      "AtsOfferPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsOffer" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsOfferPaginatedResponse"
      },
      "AtsOffice": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the office.",
            "example": "San Francisco"
          },
          "location": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location",
            "description": "The physical location or address of the office.",
            "example": "1234 Main Street, San Francisco, CA 94111"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "name",
          "location"
        ],
        "title": "AtsOffice",
        "description": "The AtsOffice object represents an office or physical location of the company in the ATS."
      },
      "AtsOfficePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsOffice" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsOfficePaginatedResponse"
      },
      "AtsRejectReason": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name or title of the reject reason.",
            "example": "Not a good fit"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields", "name"],
        "title": "AtsRejectReason",
        "description": "The AtsRejectReason object represents a reason for rejecting a candidate within the ATS."
      },
      "AtsRejectReasonPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsRejectReason" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsRejectReasonPaginatedResponse"
      },
      "AtsRemoteUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The first name of the user.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The last name of the user.",
            "example": "Doe"
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email",
            "description": "The email address of the user.",
            "example": "john@doe.com"
          },
          "disabled": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Disabled",
            "description": "Indicates whether the user's account is disabled.",
            "example": false
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "The ISO date string when the user profile was created in the remote system.",
            "example": "2021-01-01T00:00:00Z"
          },
          "access_role": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Access Role",
            "description": "The role of the user defining their level of access.",
            "example": "ADMIN"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "first_name",
          "last_name",
          "email",
          "disabled",
          "remote_created_at",
          "access_role"
        ],
        "title": "AtsRemoteUser",
        "description": "The AtsRemoteUser object represents a user profile from a remote system that interacts with the ATS."
      },
      "AtsRemoteUserPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsRemoteUser" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsRemoteUserPaginatedResponse"
      },
      "AtsScheduledInterview": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "application": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Application",
            "description": "The identifier of the application associated with the interview.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "job_interview_stage": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Job Interview Stage",
            "description": "The identifier of the interview stage associated with this interview.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "organizer": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Organizer",
            "description": "The identifier of the user who organized the interview.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "interviewers": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Interviewers",
            "description": "A list of identifiers for the users who are scheduled to interview the candidate.",
            "example": [
              "018b4bfb-5ece-70b1-ad5e-862a9433aa65",
              "018b4bfb-5ece-70b1-ad5e-862a9412aa12"
            ]
          },
          "location": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location",
            "description": "The location where the interview is scheduled to take place.",
            "example": "123 Main St, Anytown, USA"
          },
          "start_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start At",
            "description": "The ISO date string when the interview is scheduled to start.",
            "example": "2021-01-01T00:00:00Z"
          },
          "end_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End At",
            "description": "The ISO date string when the interview is scheduled to end.",
            "example": "2021-01-01T00:00:00Z"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "The ISO date string when the interview was created in the remote system.",
            "example": "2021-01-01T00:00:00Z"
          },
          "remote_updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Updated At",
            "description": "The ISO date string when the interview was last updated in the remote system.",
            "example": "2021-01-01T00:00:00Z"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The current status of the scheduled interview.",
            "example": "SCHEDULED"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "application",
          "job_interview_stage",
          "organizer",
          "interviewers",
          "location",
          "start_at",
          "end_at",
          "remote_created_at",
          "remote_updated_at",
          "status"
        ],
        "title": "AtsScheduledInterview",
        "description": "The AtsScheduledInterview object represents an interview event scheduled within the ATS."
      },
      "AtsScheduledInterviewPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsScheduledInterview" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsScheduledInterviewPaginatedResponse"
      },
      "AtsScorecard": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "application": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Application",
            "description": "The identifier of the application associated with the scorecard.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "interview": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Interview",
            "description": "The identifier of the interview associated with the scorecard.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "interviewer": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Interviewer",
            "description": "The identifier of the interviewer who filled out the scorecard.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "The ISO date string when the scorecard was created in the remote system.",
            "example": "2021-01-01T00:00:00Z"
          },
          "submitted_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Submitted At",
            "description": "The ISO date string when the scorecard was submitted by the interviewer.",
            "example": "2021-01-01T00:00:00Z"
          },
          "overall_recommendation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Overall Recommendation",
            "description": "The final recommendation or decision submitted by the interviewer.",
            "example": "RECOMMEND"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "application",
          "interview",
          "interviewer",
          "remote_created_at",
          "submitted_at",
          "overall_recommendation"
        ],
        "title": "AtsScorecard",
        "description": "The AtsScorecard object represents an evaluation of a candidate's interview within the ATS."
      },
      "AtsScorecardPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsScorecard" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsScorecardPaginatedResponse"
      },
      "AtsScreeningQuestion": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "job": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Job",
            "description": "The identifier of the job to which this screening question is related.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "A detailed description of the screening question.",
            "example": "Please describe your experience with Python."
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title",
            "description": "The title of the screening question.",
            "example": "Python Experience"
          },
          "type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Type",
            "description": "The type of screening question, such as 'text', 'multiple-choice', etc.",
            "example": "TEXT"
          },
          "required": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Required",
            "description": "Indicates whether answering the question is required for the applicant.",
            "example": true
          },
          "options": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Options",
            "description": "The possible options for answering the question, if applicable.",
            "example": ["Yes", "No", "N/A"]
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "job",
          "description",
          "title",
          "type",
          "required",
          "options"
        ],
        "title": "AtsScreeningQuestion",
        "description": "The AtsScreeningQuestion object represents a question used to screen candidates for a job within the ATS."
      },
      "AtsScreeningQuestionPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsScreeningQuestion" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsScreeningQuestionPaginatedResponse"
      },
      "AtsTag": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the tag.",
            "example": "JUNIOR"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields", "name"],
        "title": "AtsTag",
        "description": "The AtsTag object represents a tag that can be applied to candidates, jobs, or other entities within the ATS."
      },
      "AtsTagPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/AtsTag" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "AtsTagPaginatedResponse"
      },
      "AtsUrl": {
        "properties": {
          "value": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Value",
            "description": "The site's url."
          },
          "url_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Url Type",
            "description": "The type of site. Possible values include: PERSONAL, COMPANY, PORTFOLIO, BLOG, SOCIAL_MEDIA, OTHER, JOB_POSTING. In cases where there is no clear mapping, the original value passed through will be returned."
          }
        },
        "type": "object",
        "required": ["value", "url_type"],
        "title": "AtsUrl"
      },
      "Category": {
        "type": "string",
        "enum": ["CRM", "HRIS", "ATS", "LMS"],
        "title": "Category"
      },
      "ConnectorPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/ConnectorResponse" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "ConnectorPaginatedResponse"
      },
      "ConnectorResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Id of the connector",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Flag to indicate if connector is active or not",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ConnectorStatus",
            "description": "Link status of the connector",
            "example": "COMPLETE"
          },
          "integration_slug": {
            "type": "string",
            "title": "Integration Slug",
            "description": "Integration slug for the particular connector",
            "example": "ukg-pro"
          },
          "end_user": {
            "type": "string",
            "title": "End User",
            "description": "Name of the end user which is used when creating corresponding connector",
            "example": "Acme Corp."
          },
          "sync_status": {
            "anyOf": [
              { "$ref": "#/components/schemas/JobDisplayStatus" },
              { "type": "null" }
            ],
            "description": "Latest Sync status of the connector",
            "example": "Done"
          },
          "last_sync_start_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Sync Start Time",
            "description": "This time represent last sync start time",
            "example": "2024-10-16T00:00:00Z"
          },
          "next_sync_start_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Next Sync Start Time",
            "description": "This time represent next sync start time",
            "example": "2024-10-17T00:00:00Z"
          },
          "connector_token": {
            "type": "string",
            "title": "Connector Token",
            "description": "Connector token for this connector",
            "example": "LJITuCJFqpGXeKfZtn4I9ZcahzA-lkCSO6uhDKj5xw9EzPL96qk7ObgIHQQ1GnxH"
          },
          "category": {
            "$ref": "#/components/schemas/Category",
            "description": "Category of the connector",
            "example": "HRIS"
          },
          "is_test_connector": {
            "type": "boolean",
            "title": "Is Test Connector",
            "description": "Flag indicating if connector is test connector or not",
            "example": false
          },
          "completed_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Completed At",
            "description": "Indicated time at which connector has been linked properly",
            "example": "2024-10-17T00:00:00Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Connector creation time",
            "example": "2024-10-17T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "is_active",
          "status",
          "integration_slug",
          "end_user",
          "sync_status",
          "last_sync_start_time",
          "next_sync_start_time",
          "connector_token",
          "category",
          "is_test_connector",
          "completed_at",
          "created_at"
        ],
        "title": "ConnectorResponse"
      },
      "ConnectorStatus": {
        "type": "string",
        "enum": ["COMPLETE", "INCOMPLETE", "RELINK_NEEDED"],
        "title": "ConnectorStatus"
      },
      "CreateAtsActivity": {
        "properties": {
          "user": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "User",
            "description": "The user who owns the activity.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "activity_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Activity Type",
            "description": "The type of activity.",
            "example": "NOTE"
          },
          "subject": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Subject",
            "description": "The subject of the activity.",
            "example": "Interview with John Doe"
          },
          "body": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Body",
            "description": "The body of the activity. This can include notes, comments, or other relevant information.",
            "example": "John Doe was interviewed for the position of Software Engineer."
          },
          "visibility": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Visibility",
            "description": "Visibility of the activity. Can be PUBLIC/PRIVATE",
            "example": "PUBLIC"
          },
          "candidate": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Candidate",
            "description": "Candidate who applied for the activity.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "required": [
          "user",
          "activity_type",
          "body",
          "visibility",
          "candidate"
        ],
        "title": "CreateAtsActivity"
      },
      "CreateCandidate": {
        "properties": {
          "data": { "$ref": "#/components/schemas/PostCandidate" },
          "remote_user_id": {
            "type": "string",
            "title": "Remote User Id",
            "description": "The remote user's id",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "job_requisition_id": {
            "type": "string",
            "title": "Job Requisition Id",
            "description": "The job requisition id in external ATS",
            "example": "R-00007"
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "CreateCandidate"
      },
      "CreateHrisEmployeePayrollRun": {
        "properties": {
          "employee": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Employee",
            "description": "The employee whose payroll is being run.",
            "example": "018b168d-70f9-7043-a796-56d66a4f8f07"
          },
          "payroll_run": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Payroll Run",
            "description": "The payroll being run.",
            "default": "",
            "example": "018b709e-b6ef-7db4-902a-a064157bdba2"
          },
          "payroll_process_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Payroll Process Name",
            "description": "The payroll process name to be displayed.",
            "default": "",
            "example": "Hours, Earning Codes"
          },
          "paystatement_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Paystatement Type Id",
            "description": "Id of Employee's Paystatement Type",
            "example": 53123324
          },
          "payroll_file": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Payroll File",
            "description": "Employee's Payroll File Number for which earnings are made",
            "default": "",
            "example": "000099"
          },
          "payroll_group_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Payroll Group Code",
            "description": "The payroll group code the employee belongs to.",
            "default": "",
            "example": "9YT"
          },
          "gross_pay": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Gross Pay",
            "description": "The total earnings throughout a given period for an employee before any deductions are made.",
            "default": 0,
            "example": 772277.77
          },
          "net_pay": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Net Pay",
            "description": "The take-home pay throughout a given period for an employee after deductions are made.",
            "default": 0,
            "example": 577221.27
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The day and time the benefit started.",
            "default": "",
            "example": "2023-07-01T00:00:00Z"
          },
          "end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Date",
            "description": "The day and time the benefit ended.",
            "default": "",
            "example": "2023-07-31T00:00:00Z"
          },
          "check_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Check Date",
            "description": "The day and time the payroll run was checked.",
            "default": "",
            "example": "2023-08-31T00:00:00Z"
          },
          "earnings": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Earnings",
            "description": "The earnings of the Employee",
            "default": [],
            "example": [{ "amount": "27151", "name": "SALARY" }]
          },
          "deductions": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Deductions",
            "description": "The deductions of the Employee",
            "default": [],
            "example": [
              {
                "company_deduction": "77.57",
                "employee_deduction": "27.22",
                "name": "Social Security"
              }
            ]
          },
          "taxes": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Taxes",
            "description": "The taxes of the Employee",
            "default": [],
            "example": [
              { "amount": "175.22", "name": "California State Income Tax" }
            ]
          }
        },
        "type": "object",
        "required": ["employee"],
        "title": "CreateHrisEmployeePayrollRun"
      },
      "CreateHrisTimeOff": {
        "properties": {
          "employee": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Employee",
            "description": "The employee requesting time off.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "approver": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Approver",
            "description": "The Bindbee ID of the employee with the ability to approve the time off request.",
            "default": "",
            "example": "018b4bfb-6065-7f83-b11d-e85ea49e37c3"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of this time off request.",
            "default": "",
            "example": "APPROVED"
          },
          "employee_note": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employee Note",
            "description": "The employee note for this time off request.",
            "default": "",
            "example": "Paid paid vacation! Scuba diving in Hawaii."
          },
          "units": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Units",
            "description": "The measurement that the third-party integration uses to count time requested.",
            "default": "",
            "example": "HOURS"
          },
          "amount": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Amount",
            "description": "The time off quantity measured by the prescribed “units”.",
            "example": 12
          },
          "request_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Request Type",
            "description": "The type of time off request.",
            "example": "VACATION"
          },
          "start_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Time",
            "description": "The day and time of the start of the time requested off.",
            "example": "2023-04-10T00:00:00Z"
          },
          "end_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Time",
            "default": "The day and time of the end of the time requested off.",
            "example": "2023-04-10T00:00:00Z"
          }
        },
        "type": "object",
        "required": ["employee", "amount", "request_type", "start_time"],
        "title": "CreateHrisTimeOff",
        "description": "The TimeOff object is used to represent all employees' Time Off entries."
      },
      "CreateHrisTimeSheetEntry": {
        "properties": {
          "employee": {
            "type": "string",
            "format": "uuid",
            "title": "Employee",
            "description": "The employee the timesheet entry is for.",
            "example": "018abccc-4a0a-7e7d-a9d7-56881f57a6b4"
          },
          "date": {
            "type": "string",
            "title": "Date",
            "description": "The date the time was logged.",
            "example": "2023-11-10"
          },
          "hours_worked": {
            "anyOf": [{ "type": "integer" }, { "type": "number" }],
            "title": "Hours Worked",
            "description": "The number of hours logged by the employee.",
            "default": 0,
            "example": 12
          },
          "break_duration": {
            "type": "number",
            "title": "Break Duration",
            "description": "The number of hours the employee took for a break.",
            "default": 0,
            "example": 30
          },
          "start_time": {
            "type": "string",
            "title": "Start Time",
            "description": "The day and time of the start of the time requested off.",
            "example": "2023-11-10T00:00:00Z"
          },
          "end_time": {
            "type": "string",
            "title": "End Time",
            "description": "The day and time of the end of the time requested off.",
            "example": "2023-11-10T00:00:00"
          }
        },
        "type": "object",
        "required": ["employee", "date", "start_time", "end_time"],
        "title": "CreateHrisTimeSheetEntry"
      },
      "Deduction": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The deduction's name.",
            "example": "Social Security"
          },
          "employee_deduction": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Employee Deduction",
            "description": "The amount of money that is withheld from an employee's gross pay by the employee.",
            "example": 27.22
          },
          "company_deduction": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Company Deduction",
            "description": "The amount of money that is withheld on behalf of an employee by the company.",
            "example": 77.57
          }
        },
        "type": "object",
        "required": ["name", "employee_deduction", "company_deduction"],
        "title": "Deduction"
      },
      "Earning": {
        "properties": {
          "amount": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Amount",
            "description": "The amount earned.",
            "example": "27151"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The type of earning. Possible values include: SALARY, REIMBURSEMENT, OVERTIME, BONUS, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "SALARY"
          }
        },
        "type": "object",
        "required": ["amount", "name"],
        "title": "Earning"
      },
      "EndUserCreate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "format": "email" },
              { "type": "null" }
            ],
            "title": "Email",
            "description": "Email of the end_user",
            "example": "my_email@gmail.com"
          },
          "org_name": {
            "type": "string",
            "minLength": 2,
            "title": "Organization Name",
            "description": "Name of the organization to which end user belongs",
            "example": "Kunal Organization"
          },
          "origin_id": {
            "type": "string",
            "minLength": 2,
            "title": "Unique Identifier",
            "description": "Unique identifier to identify Connector",
            "example": "2kh3ub45"
          }
        },
        "type": "object",
        "required": ["org_name", "origin_id"],
        "title": "EndUserCreate"
      },
      "HRISEmploymentStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "PENDING",
          "INACTIVE",
          "ACTIVE_EXTERNAL",
          "INACTIVE_EXTERNAL"
        ],
        "title": "HRISEmploymentStatus"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HrisAddress": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "Name of the location",
            "example": "UK-HO-London"
          },
          "location": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location",
            "description": "Location",
            "example": "UK-HO-London"
          },
          "street_1": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Street 1",
            "description": "Street 1",
            "example": "1011"
          },
          "street_2": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Street 2",
            "description": "Street 2",
            "example": "Lane number 4, Golden Villa"
          },
          "city": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "City",
            "description": "City",
            "example": "London"
          },
          "state": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "State",
            "description": "State",
            "example": "LND"
          },
          "postal_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Postal Code",
            "description": "Postal Code",
            "example": "56273"
          },
          "country": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Country",
            "description": "Country",
            "example": "UK"
          }
        },
        "type": "object",
        "title": "HrisAddress"
      },
      "HrisBankInfo": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee that appears in the third-party integration's UI.",
            "example": "018af1fe-1250-772d-87c5-6f725a579e8a"
          },
          "account_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Account Number",
            "description": "The bank account number of the employee.",
            "example": "123456789012"
          },
          "routing_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Routing Number",
            "description": "Bank identifier for financial transactions in the US for an employee.",
            "example": "123456789"
          },
          "bank_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Bank Name",
            "description": "The employee's bank name.",
            "example": "Wells Fargo"
          },
          "account_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Account Type",
            "description": "The employee's bank account type.",
            "example": "SAVINGS"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the bank info of third party's employee was created.",
            "example": "2023-03-01T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "account_number",
          "routing_number",
          "bank_name",
          "account_type",
          "remote_created_at"
        ],
        "title": "HrisBankInfo",
        "description": "The Bank info object is used to represent bank info of any person who has been employed by a company."
      },
      "HrisBankInfoPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisBankInfo" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisBankInfoPaginatedResponse"
      },
      "HrisBenefit": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee on the plan.",
            "example": "018b18ef-c488-7d40-9131-91bbc47c1007"
          },
          "plan_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Plan Name",
            "description": "The name of the plan.",
            "example": "401(k) Plan"
          },
          "provider_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Provider Name",
            "description": "The name of the benefit provider.",
            "example": "Metlife"
          },
          "benefit_plan_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Benefit Plan Type",
            "description": "The type of benefit plan",
            "example": "Health Insurance"
          },
          "frequency": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Frequency",
            "description": "The frequency of the plan",
            "example": "SEMIMONTHLY"
          },
          "employee_contribution": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Employee Contribution",
            "description": "The employee's contribution.",
            "example": 22.27
          },
          "company_contribution": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Company Contribution",
            "description": "The company's contribution.",
            "example": 77.22
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The day and time the benefit started.",
            "example": "2023-10-18T00:00:00Z"
          },
          "effective_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Effective Date",
            "description": "The day and time the benefit is effective from.",
            "example": "2023-10-18T00:00:00Z"
          },
          "end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Date",
            "description": "The day and time the benefit ended.",
            "example": "2024-10-16T00:00:00Z"
          },
          "employer_benefit": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employer Benefit",
            "description": "The employer benefit plan the employee is enrolled in.",
            "example": "018b18ef-c488-7d40-9131-91bbc47c1007"
          },
          "benefit_plan_category": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Benefit Plan Category",
            "description": "The category of the plan.",
            "example": "MEDICAL"
          },
          "coverage_tier": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Coverage Tier",
            "description": "The coverage tier for the benefit plan.",
            "example": "EMPLOYEE_ONLY"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "plan_name",
          "provider_name",
          "benefit_plan_type",
          "frequency",
          "employee_contribution",
          "company_contribution",
          "start_date",
          "effective_date",
          "end_date",
          "employer_benefit",
          "benefit_plan_category",
          "coverage_tier"
        ],
        "title": "HrisBenefit",
        "description": "The Benefit object is used to represent a benefit that an employee has enrolled in."
      },
      "HrisBenefitPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisBenefit" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisBenefitPaginatedResponse"
      },
      "HrisCompany": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "legal_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Legal Name",
            "description": "The company's legal name.",
            "example": "Integrax Pvt. Ltd."
          },
          "display_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Display Name",
            "description": "The company's display name.",
            "example": "Bindbee"
          },
          "eins": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Eins",
            "description": "The company's Employer Identification Numbers.",
            "example": ["12-3456789", "12-3451111"]
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "legal_name",
          "display_name",
          "eins"
        ],
        "title": "HrisCompany",
        "description": "The Company object is used to represent a company within the HRIS / Payroll system."
      },
      "HrisCompanyPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisCompany" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisCompanyPaginatedResponse"
      },
      "HrisCompensation": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee holding this position.",
            "example": "018abccc-3208-7b2d-8b86-927945f89a42"
          },
          "pay_group": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Pay Group",
            "description": "The employee's pay group.",
            "example": "018b802f-4856-7ea8-a83f-ac374853ab90"
          },
          "pay_rate": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Pay Rate",
            "description": "The position's pay rate in dollars.",
            "example": 77000
          },
          "pay_period": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Period",
            "description": "The time period this pay rate encompasses. Possible values include: HOUR, DAY, WEEK, EVERY_TWO_WEEKS, SEMIMONTHLY, MONTH, QUARTER, EVERY_SIX_MONTHS, YEAR, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "YEAR"
          },
          "pay_frequency": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Frequency",
            "description": "The position's pay frequency. Possible values include: WEEKLY, BIWEEKLY, MONTHLY, QUARTERLY, SEMIANNUALLY, ANNUALLY, THIRTEEN-MONTHLY, PRO_RATA, SEMIMONTHLY, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "MONTHLY"
          },
          "pay_currency": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Currency",
            "description": "The position's currency code.",
            "example": "USD"
          },
          "flsa_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Flsa Status",
            "description": "The position's FLSA status. Possible values include: EXEMPT, SALARIED_NONEXEMPT, NONEXEMPT, OWNER, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "EXEMPT"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The position's start date.",
            "example": "2022-12-15T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "pay_group",
          "pay_rate",
          "pay_period",
          "pay_frequency",
          "pay_currency",
          "flsa_status",
          "start_date"
        ],
        "title": "HrisCompensation"
      },
      "HrisCompensationPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisCompensation" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisCompensationPaginatedResponse"
      },
      "HrisDependent": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee holding this position.",
            "example": "018abccb-c4a9-72f6-be1d-3fc7aaf2be67"
          },
          "home_location": {
            "anyOf": [
              { "$ref": "#/components/schemas/HrisAddress" },
              { "type": "null" }
            ],
            "description": "The employee's home address.",
            "example": {
              "city": "London",
              "country": "UK",
              "location": "UK-HO-London",
              "postal_code": "56273",
              "state": "LND",
              "street_1": "1011",
              "street_2": "Lane number 4, Golden Villa"
            }
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The dependent's first name",
            "example": "Aayushi"
          },
          "middle_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Middle Name",
            "description": "The dependent's middle name",
            "example": "Olivia"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The dependent's last name",
            "example": "Rai"
          },
          "relationship": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Relationship",
            "description": "The dependent's relationship with this employee",
            "example": "SPOUSE"
          },
          "date_of_birth": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Date Of Birth",
            "description": "The dependent's date of birth",
            "example": "1995-04-16T00:00:00Z"
          },
          "gender": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Gender",
            "description": "The dependent's gender",
            "example": "female"
          },
          "phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Phone Number",
            "description": "The dependent's phone number",
            "example": "+44-208-555-2112"
          },
          "ssn": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ssn",
            "description": "The dependent's SSN",
            "example": "555-22-5555"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "home_location",
          "first_name",
          "middle_name",
          "last_name",
          "relationship",
          "date_of_birth",
          "gender",
          "phone_number",
          "ssn"
        ],
        "title": "HrisDependent"
      },
      "HrisDependentBenefit": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employer_benefit": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employer Benefit",
            "description": "The employer benefit plan the dependent is enrolled in.",
            "example": "018b18ef-c488-7d40-9131-91bbc47c1007"
          },
          "dependent": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Dependent",
            "description": "The dependent which belongs to this benefit.",
            "example": "018abccb-c4a9-72f6-be1d-3fc7aaf2be67"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The day and time the benefit started.",
            "example": "2023-10-18T00:00:00Z"
          },
          "end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Date",
            "description": "The day and time the benefit ended.",
            "example": "2024-10-16T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employer_benefit",
          "dependent",
          "start_date",
          "end_date"
        ],
        "title": "HrisDependentBenefit",
        "description": "The Hris Dependent Benefit object is used to represent a benefit that an dependent has enrolled in."
      },
      "HrisDependentBenefitPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisDependentBenefit" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisDependentBenefitPaginatedResponse"
      },
      "HrisDependentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisDependent" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisDependentPaginatedResponse"
      },
      "HrisEmployeeCreateRequest": {
        "properties": {
          "employee_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employee Number",
            "description": "The employee's number that appears in the third-party integration's UI.",
            "example": "1"
          },
          "company": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Company",
            "description": "The ID of the employee's company.",
            "example": "018af1fe-1250-772d-87c5-6f725a579e8a"
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The employee's first name.",
            "example": "Kunal"
          },
          "middle_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Middle Name",
            "description": "The employee's middle name.",
            "example": "Christopher"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The employee's last name.",
            "example": "Tyagi"
          },
          "preferred_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Preferred Name",
            "description": "The employee's preferred first name.",
            "example": "Dark Knight"
          },
          "display_full_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Display Full Name",
            "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "example": "Kunal Tyagi"
          },
          "username": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Username",
            "description": "The employee's username that appears in the remote UI.",
            "example": "kunaltyagi"
          },
          "designation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Designation",
            "description": "The employee's current designation/title",
            "example": "Chief Technology Officer"
          },
          "groups": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Groups",
            "description": "The IDs of the groups that the employee belongs to."
          },
          "department": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Department",
            "description": "The employee's department",
            "example": "Engineering"
          },
          "division": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Division",
            "description": "The employee's division",
            "example": "Bangalore Division"
          },
          "work_email": {
            "anyOf": [
              { "type": "string", "format": "email" },
              { "type": "null" }
            ],
            "title": "Work Email",
            "description": "The employee's work email.",
            "example": "kunal@bindbee.dev"
          },
          "personal_email": {
            "anyOf": [
              { "type": "string", "format": "email" },
              { "type": "null" }
            ],
            "title": "Personal Email",
            "description": "The employee's personal email.",
            "example": "kunaltyagi77@gmail.com"
          },
          "mobile_phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Mobile Phone Number",
            "description": "The employee's mobile phone number.",
            "example": "+1234567890"
          },
          "home_phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Home Phone Number",
            "description": "The employee's home phone number.",
            "example": "+1234567890"
          },
          "country_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Country Code",
            "description": "The employee's country code",
            "example": "+91"
          },
          "home_location": {
            "anyOf": [
              { "$ref": "#/components/schemas/HrisAddress" },
              { "type": "null" }
            ],
            "description": "The employee's home address.",
            "example": {
              "city": "London",
              "country": "UK",
              "location": "UK-HO-London",
              "name": "UK-HO-London",
              "postal_code": "56273",
              "state": "LND",
              "street_1": "1011",
              "street_2": "Lane number 4, Golden Villa"
            }
          },
          "work_location": {
            "anyOf": [
              { "$ref": "#/components/schemas/HrisAddress" },
              { "type": "null" }
            ],
            "description": "The employee's work address.",
            "example": {
              "city": "London",
              "country": "UK",
              "location": "UK-HO-London",
              "name": "UK-HO-London",
              "postal_code": "56273",
              "state": "LND",
              "street_1": "1011",
              "street_2": "Lane number 4, Golden Villa"
            }
          },
          "manager": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Manager",
            "description": "UUID of the employee's manager",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "pay_group": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Pay Group",
            "description": "The employee's pay group",
            "example": "018af1fe-1250-77c5-9fcd-4bca1e4568f4"
          },
          "ssn": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ssn",
            "description": "The employee's social security number.",
            "example": "1234567890"
          },
          "gender": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Gender",
            "description": "The employee's gender.",
            "example": "MALE"
          },
          "ethnicity": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ethnicity",
            "description": "The employee's ethnicity.",
            "example": "ASIAN_OR_INDIAN_SUBCONTINENT"
          },
          "marital_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Marital Status",
            "description": "The employee's filing status as related to marital status",
            "example": "SINGLE"
          },
          "date_of_birth": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Date Of Birth",
            "description": "The employee's date of birth.",
            "example": "1986-10-27T00:00:00Z"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "example": "2023-03-05T00:00:00Z"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the third party's employee was created.",
            "example": "2023-03-01T00:00:00Z"
          },
          "employment_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employment Status",
            "description": "The employment status of the employee. Possible values include: ACTIVE, PENDING, INACTIVE, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "INACTIVE"
          },
          "termination_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Termination Date",
            "description": "The employee's termination date.",
            "example": "2023-06-05T00:00:00Z"
          },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Avatar",
            "description": "The URL of the employee's avatar image.",
            "example": "http://alturl.com/h2h8m"
          },
          "payroll_run_calendar": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Payroll Run Calendar",
            "description": "The employee's payroll calendar",
            "example": "018af1fe-1250-77c5-9fcd-4bca1e4568f4"
          },
          "additional_attributes": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Additional Attributes",
            "description": "Fields related to models other than employee Model",
            "example": {
              "contract_end_date": "2025-12-31T00:00:00",
              "emergency_contact": "John Doe - +1-234-567-8901",
              "employee_type": "Contract",
              "language_proficiency": "English, French",
              "marital_status": "Married",
              "performance_rating": "Excellent",
              "previous_employer": "TechCorp"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": { "customTshirtSize": "XXL" }
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "HrisEmployeeCreateRequest"
      },
      "HrisEmployeePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisEmployeeResponse" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisEmployeePaginatedResponse"
      },
      "HrisEmployeePayrollRun": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee whose payroll is being run.",
            "example": "018b168d-70f9-7043-a796-56d66a4f8f07"
          },
          "payroll_run": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Payroll Run",
            "description": "The payroll being run.",
            "example": "018b709e-b6ef-7db4-902a-a064157bdba2"
          },
          "gross_pay": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Gross Pay",
            "description": "The total earnings throughout a given period for an employee before any deductions are made.",
            "example": 772277.77
          },
          "net_pay": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Net Pay",
            "description": "The take-home pay throughout a given period for an employee after deductions are made.",
            "example": 577221.27
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The day and time the benefit started.",
            "example": "2023-07-01T00:00:00Z"
          },
          "end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Date",
            "description": "The day and time the benefit ended.",
            "example": "2023-07-31T00:00:00Z"
          },
          "check_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Check Date",
            "description": "The day and time the payroll run was checked.",
            "example": "2023-08-31T00:00:00Z"
          },
          "earnings": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Earning" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Earnings",
            "description": "The earnings of the Employee",
            "example": [{ "amount": "27151", "name": "SALARY" }]
          },
          "deductions": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Deduction" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Deductions",
            "description": "The deductions of the Employee",
            "example": [
              {
                "company_deduction": "77.57",
                "employee_deduction": "27.22",
                "name": "Social Security"
              }
            ]
          },
          "taxes": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Tax" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Taxes",
            "description": "The taxes of the Employee",
            "example": [
              { "amount": "175.22", "name": "California State Income Tax" }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "payroll_run",
          "gross_pay",
          "net_pay",
          "start_date",
          "end_date",
          "check_date",
          "earnings",
          "deductions",
          "taxes"
        ],
        "title": "HrisEmployeePayrollRun",
        "description": "The EmployeePayrollRun object is used to represent an employee's pay statement for a specific payroll run."
      },
      "HrisEmployeePayrollRunPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisEmployeePayrollRun" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisEmployeePayrollRunPaginatedResponse"
      },
      "HrisEmployeeResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employee Number",
            "description": "The employee's number that appears in the third-party integration's UI.",
            "example": "1"
          },
          "company": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Company",
            "description": "The ID of the employee's company.",
            "example": "018af1fe-1250-772d-87c5-6f725a579e8a"
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The employee's first name.",
            "example": "Kunal"
          },
          "middle_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Middle Name",
            "description": "The employee's middle name.",
            "example": "Christopher"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The employee's last name.",
            "example": "Tyagi"
          },
          "preferred_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Preferred Name",
            "description": "The employee's preferred first name.",
            "example": "Dark Knight"
          },
          "display_full_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Display Full Name",
            "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "example": "Kunal Tyagi"
          },
          "username": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Username",
            "description": "The employee's username that appears in the remote UI.",
            "example": "kunaltyagi"
          },
          "designation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Designation",
            "description": "The employee's current designation/title",
            "example": "Chief Technology Officer"
          },
          "groups": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Groups",
            "description": "The IDs of the groups that the employee belongs to."
          },
          "department": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Department",
            "description": "The employee's department",
            "example": "Engineering"
          },
          "division": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Division",
            "description": "The employee's division",
            "example": "Bangalore Division"
          },
          "work_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Work Email",
            "description": "The employee's work email.",
            "example": "kunal@bindbee.dev"
          },
          "personal_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Personal Email",
            "description": "The employee's personal email.",
            "example": "kunaltyagi77@gmail.com"
          },
          "mobile_phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Mobile Phone Number",
            "description": "The employee's mobile phone number.",
            "example": "+1234567890"
          },
          "home_phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Home Phone Number",
            "description": "The employee's home phone number.",
            "example": "+1234567890"
          },
          "country_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Country Code",
            "description": "The employee's country code",
            "example": "+91"
          },
          "home_location": {
            "anyOf": [
              { "$ref": "#/components/schemas/HrisAddress" },
              { "type": "null" }
            ],
            "description": "The employee's home address.",
            "example": {
              "city": "London",
              "country": "UK",
              "location": "UK-HO-London",
              "name": "UK-HO-London",
              "postal_code": "56273",
              "state": "LND",
              "street_1": "1011",
              "street_2": "Lane number 4, Golden Villa"
            }
          },
          "work_location": {
            "anyOf": [
              { "$ref": "#/components/schemas/HrisAddress" },
              { "type": "null" }
            ],
            "description": "The employee's work address.",
            "example": {
              "city": "London",
              "country": "UK",
              "location": "UK-HO-London",
              "name": "UK-HO-London",
              "postal_code": "56273",
              "state": "LND",
              "street_1": "1011",
              "street_2": "Lane number 4, Golden Villa"
            }
          },
          "manager": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Manager",
            "description": "The employee ID of the employee's manager.",
            "example": "018aeaff-cc7c-7837-988a-965762bd63c1"
          },
          "pay_group": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Pay Group",
            "description": "The employee's pay group",
            "example": "018af1fe-1250-77c5-9fcd-4bca1e4568f4"
          },
          "ssn": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ssn",
            "description": "The employee's social security number.",
            "example": "1234567890"
          },
          "gender": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Gender",
            "description": "The employee's gender.",
            "example": "MALE"
          },
          "ethnicity": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ethnicity",
            "description": "The employee's ethnicity.",
            "example": "ASIAN_OR_INDIAN_SUBCONTINENT"
          },
          "marital_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Marital Status",
            "description": "The employee's filing status as related to marital status",
            "example": "SINGLE"
          },
          "date_of_birth": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Date Of Birth",
            "description": "The employee's date of birth.",
            "example": "1986-10-27T00:00:00Z"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "example": "2023-03-05T00:00:00Z"
          },
          "remote_created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Created At",
            "description": "When the third party's employee was created.",
            "example": "2023-03-01T00:00:00Z"
          },
          "employment_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employment Status",
            "description": "The employment status of the employee. Possible values include: ACTIVE, PENDING, INACTIVE, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "INACTIVE"
          },
          "termination_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Termination Date",
            "description": "The employee's termination date.",
            "example": "2023-06-05T00:00:00Z"
          },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Avatar",
            "description": "The URL of the employee's avatar image.",
            "example": "http://alturl.com/h2h8m"
          },
          "payroll_run_calendar": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Payroll Run Calendar",
            "description": "The employee's payroll calendar",
            "example": "018af1fe-1250-77c5-9fcd-4bca1e4568f4"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "HrisEmployeeResponse"
      },
      "HrisEmployerBenefit": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "plan_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Plan Name",
            "description": "The name of the plan.",
            "example": "401(k) Plan"
          },
          "provider_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Provider Name",
            "description": "The name of the benefit provider.",
            "example": "Metlife"
          },
          "benefit_plan_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Benefit Plan Type",
            "description": "The type of benefit plan",
            "example": "Health Insurance"
          },
          "deduction_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Deduction Code",
            "description": "The employer benefit's deduction code.",
            "example": "KT"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "The employer benefit's description.",
            "example": "KTO Silver Plan"
          },
          "benefit_plan_category": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Benefit Plan Category",
            "description": "The category of the plan.",
            "example": "MEDICAL"
          },
          "coverage_tiers": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Coverage Tiers",
            "description": "The coverage tiers for the benefit plan.",
            "example": ["EMPLOYEE_SPOUSE", "EMPLOYEE_CHILDREN"]
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "plan_name",
          "provider_name",
          "benefit_plan_type",
          "deduction_code",
          "description",
          "benefit_plan_category",
          "coverage_tiers"
        ],
        "title": "HrisEmployerBenefit",
        "description": "The Employer Benefit object is used to represent a benefit plan offered by a company."
      },
      "HrisEmployerBenefitPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisEmployerBenefit" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisEmployerBenefitPaginatedResponse"
      },
      "HrisEmployment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee holding this position.",
            "example": "018abccc-3208-7b2d-8b86-927945f89a42"
          },
          "job_title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Job Title",
            "description": "The position's title.",
            "example": "Chief Technology Officer"
          },
          "department": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Department",
            "description": "The position's department",
            "example": "Engineering"
          },
          "division": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Division",
            "description": "The position's division",
            "example": "Core"
          },
          "effective_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Effective Date",
            "description": "The position's effective date.",
            "example": "2023-06-22T00:00:00Z"
          },
          "employment_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employment Type",
            "description": "The position's type of employment. Possible values include: FULL_TIME, PART_TIME, INTERN, CONTRACTOR, FREELANCE, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "FULL_TIME"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "HrisEmployment",
        "description": "The Employment object is used to represent a job position at a company."
      },
      "HrisEmploymentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisEmployment" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisEmploymentPaginatedResponse"
      },
      "HrisGroup": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The group name."
          },
          "type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Type",
            "description": "The group type."
          },
          "parent_group": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Parent Group",
            "description": "The parent group id."
          },
          "is_commonly_used_as_team": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Commonly Used As Team",
            "description": "The group is commonly used as a team."
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "name",
          "type",
          "parent_group",
          "is_commonly_used_as_team"
        ],
        "title": "HrisGroup",
        "description": "The Group object is used to represent a hierarchy in employees"
      },
      "HrisGroupPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisGroup" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisGroupPaginatedResponse"
      },
      "HrisPayGroup": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The pay group name.",
            "example": "Pay Group - USA"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "The pay group description",
            "example": "Pay group for US employees"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "name",
          "description"
        ],
        "title": "HrisPayGroup",
        "description": "The PayGroup object is used to represent a subset of employees that are put together for payroll processing purposes."
      },
      "HrisPayGroupPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisPayGroup" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisPayGroupPaginatedResponse"
      },
      "HrisPayrollRun": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "pay_group": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Pay Group",
            "description": "The paygroup to which this pay cycle belongs to",
            "example": "018af1fe-2fad-749e-a282-ea17ba4fc0c4"
          },
          "run_state": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Run State",
            "description": "The state of the payroll run Possible values include: PAID, \n        DRAFT, APPROVED, FAILED, CLOSED. In cases where there is no clear mapping, \n        the original value passed through will be returned.",
            "example": "PAID"
          },
          "run_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Run Type",
            "description": "The type of the payroll run Possible values include: REGULAR, \n        OFF_CYCLE, CORRECTION, TERMINATION, SIGN_ON_BONUS. In cases where there is \n        no clear mapping, the original value passed through will be returned.",
            "example": "REGULAR"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The day and time the payroll run started.",
            "example": "2020-11-08T00:00:00Z"
          },
          "end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Date",
            "description": "The day and time the payroll run ended.",
            "example": "2020-11-15T00:00:00Z"
          },
          "check_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Check Date",
            "description": "The day and time the payroll run was checked.",
            "example": "2020-11-15T00:00:00Z"
          },
          "payroll_run_calendar": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Payroll Run Calendar",
            "description": "The payroll run calendar to which which the payroll run belongs",
            "example": "018af1fe-2fad-749e-a282-ea17ba4fc0c4"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "pay_group",
          "run_state",
          "run_type",
          "start_date",
          "end_date",
          "check_date",
          "payroll_run_calendar"
        ],
        "title": "HrisPayrollRun",
        "description": "The PayrollRun object is used to represent a group of pay statements for a specific pay schedule."
      },
      "HrisPayrollRunCalendar": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "payroll_run_calendar_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Payroll Run Calendar Name",
            "description": "The name of the payroll run calendar"
          },
          "pay_group": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Pay Group",
            "description": "The paygroup to which this pay cycle belongs to"
          },
          "pay_period_start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Period Start Date",
            "description": "The day and time the payroll run is supposed to start."
          },
          "pay_period_end_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Period End Date",
            "description": "The day and time the payroll run is supposed to end."
          },
          "pay_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pay Date",
            "description": "The day and time the by which payment is to be made."
          },
          "calendar_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Calendar Type",
            "description": "The type of the payroll run calendar"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "payroll_run_calendar_name",
          "pay_group",
          "pay_period_start_date",
          "pay_period_end_date",
          "pay_date",
          "calendar_type"
        ],
        "title": "HrisPayrollRunCalendar",
        "description": "The PayrollRunCalendar object is used to represent a group of pay statements for a specific pay schedule."
      },
      "HrisPayrollRunCalendarPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisPayrollRunCalendar" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisPayrollRunCalendarPaginatedResponse"
      },
      "HrisPayrollRunPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisPayrollRun" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisPayrollRunPaginatedResponse"
      },
      "HrisTimeOff": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee requesting time off.",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "approver": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Approver",
            "description": "The Bindbee ID of the employee with the ability to approve the time off request.",
            "example": "018b4bfb-6065-7f83-b11d-e85ea49e37c3"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of this time off request.",
            "example": "APPROVED"
          },
          "employee_note": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Employee Note",
            "description": "The employee note for this time off request.",
            "example": "Paid paid vacation! Scuba diving in Hawaii."
          },
          "units": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Units",
            "description": "The measurement that the third-party integration uses to count time requested.",
            "example": "HOURS"
          },
          "amount": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Amount",
            "description": "The time off quantity measured by the prescribed “units”.",
            "example": 12
          },
          "request_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Request Type",
            "description": "The type of time off request.",
            "example": "VACATION"
          },
          "start_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Time",
            "description": "The day and time of the start of the time requested off.",
            "example": "2023-04-10T00:00:00Z"
          },
          "end_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Time",
            "default": "The day and time of the end of the time requested off.",
            "example": "2023-04-10T00:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "approver",
          "status",
          "employee_note",
          "units",
          "amount",
          "request_type",
          "start_time"
        ],
        "title": "HrisTimeOff",
        "description": "The TimeOff object is used to represent all employees' Time Off entries."
      },
      "HrisTimeOffBalance": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee the balance belongs to.",
            "example": "018b48d5-79f8-7deb-8813-3e47b375067e"
          },
          "balance": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Balance",
            "description": "The current remaining PTO balance, always measured in terms of hours.",
            "example": 12
          },
          "used": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Used",
            "description": "The amount of PTO used in terms of hours.",
            "example": 7
          },
          "policy_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Policy Type",
            "description": "The policy type of this time off balance",
            "example": "VACATION"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "balance",
          "used",
          "policy_type"
        ],
        "title": "HrisTimeOffBalance",
        "description": "The TimeOffBalance object is used to represent current balances for an employee's Time Off plan."
      },
      "HrisTimeOffBalancePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisTimeOffBalance" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisTimeOffBalancePaginatedResponse"
      },
      "HrisTimeOffPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisTimeOff" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisTimeOffPaginatedResponse"
      },
      "HrisTimeSheetEntry": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "employee": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Employee",
            "description": "The employee the timesheet entry is for.",
            "example": "018abccc-4a0a-7e7d-a9d7-56881f57a6b4"
          },
          "date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Date",
            "description": "The day the time was logged.",
            "example": "2023-11-10T00:00:00Z"
          },
          "hours_worked": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Hours Worked",
            "description": "The number of hours logged by the employee.",
            "example": 12.0
          },
          "break_duration": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Break Duration",
            "description": "The number of hours the employee took for a break.",
            "example": 2.5
          },
          "start_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Time",
            "description": "The day and time of the start of the time requested off.",
            "example": "2023-11-10T00:00:00Z"
          },
          "end_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "End Time",
            "description": "The day and time of the end of the time requested off.",
            "example": "2023-11-10T00:00:00"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "employee",
          "date",
          "hours_worked",
          "break_duration",
          "start_time",
          "end_time"
        ],
        "title": "HrisTimeSheetEntry",
        "description": "The Timesheet Entry object is used to track coverage for Hours Worked by an Employee."
      },
      "HrisTimesheetPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/HrisTimeSheetEntry" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "HrisTimesheetPaginatedResponse"
      },
      "HttpMethodEnum": {
        "type": "string",
        "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
        "title": "HttpMethodEnum"
      },
      "IntegrationPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/IntegrationResponse" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "IntegrationPaginatedResponse"
      },
      "IntegrationResponse": {
        "properties": {
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id",
            "description": "Id of the integration",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Enabled boolean flag",
            "example": true
          },
          "integration_slug": {
            "type": "string",
            "title": "Integration Slug",
            "description": "Integration slug",
            "example": "ukg_pro"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type",
            "description": "Integration Type",
            "example": "API"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Categories this integration falls into",
            "example": "HRIS"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Name of the integration",
            "example": "BambooHR"
          },
          "icon_url": {
            "type": "string",
            "title": "Icon Url",
            "description": "The url for icon",
            "example": "https://images.unifyx.dev/logos/icon/ats/recruitee.svg"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "Description of integration",
            "example": "BambooHR is an intuitive HRIS solution designed to streamline HR processes, offering features for employee onboarding, performance management, and HR analytics, providing organizations with a user-friendly platform for effective workforce management."
          }
        },
        "type": "object",
        "required": [
          "integration_id",
          "is_enabled",
          "integration_slug",
          "integration_type",
          "category",
          "display_name",
          "icon_url",
          "description"
        ],
        "title": "IntegrationResponse"
      },
      "JobDisplayStatus": {
        "type": "string",
        "enum": ["Syncing", "Done", "Failed"],
        "title": "JobDisplayStatus"
      },
      "LMSCategoryStatus": {
        "type": "string",
        "enum": ["ACTIVE", "PENDING", "INACTIVE"],
        "title": "LMSCategoryStatus"
      },
      "LMSContentStatus": {
        "type": "string",
        "enum": ["ACTIVE", "PENDING", "INACTIVE"],
        "title": "LMSContentStatus"
      },
      "LMSCourseStatus": {
        "type": "string",
        "enum": ["ACTIVE", "PENDING", "INACTIVE"],
        "title": "LMSCourseStatus"
      },
      "LMSGrade": {
        "type": "string",
        "enum": ["A", "B", "C", "D", "F", "PASS", "FAIL", "-"],
        "title": "LMSGrade"
      },
      "LMSSkillStatus": {
        "type": "string",
        "enum": ["ACTIVE", "PENDING", "INACTIVE"],
        "title": "LMSSkillStatus"
      },
      "LMSUserStatus": {
        "type": "string",
        "enum": ["ACTIVE", "PENDING", "INACTIVE"],
        "title": "LMSUserStatus"
      },
      "LinkTokenCreate": {
        "properties": {
          "end_user_data": {
            "$ref": "#/components/schemas/EndUserCreate",
            "title": "End user data",
            "description": "End user data"
          },
          "category": {
            "$ref": "#/components/schemas/UnifiedApiCategory",
            "title": "Categories",
            "description": "Categories which will be shown in unify link",
            "example": "HRIS"
          },
          "integration": {
            "type": "string",
            "title": "Integration",
            "description": "Integration slug of the integration",
            "example": "bamboohr"
          }
        },
        "type": "object",
        "required": ["end_user_data", "category", "integration"],
        "title": "LinkTokenCreate"
      },
      "LmsCategory": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the category",
            "example": "Programming"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "The description of the category",
            "example": "All programming topics"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of the category. Possible values include: ACTIVE, PENDING, INACTIVE or - in cases where there is no clear mapping - the original value passed through",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsCategory"
      },
      "LmsCategoryPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsCategory" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsCategoryPaginatedResponse"
      },
      "LmsCompletion": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "user": {
            "anyOf": [{}, { "type": "null" }],
            "title": "User",
            "description": "The user who completed the course",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "course": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Course",
            "description": "The course that the user completed",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "content": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Content",
            "description": "The content that the user completed",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "score": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Score",
            "description": "The score obtained by the user",
            "example": 95
          },
          "grade": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Grade",
            "description": "The grade achieved by the user. Possible values include: A, B, C, D, F, PASS, FAIL or - in cases where there is no clear mapping - the original value passed through",
            "example": "PASS"
          },
          "started_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Started At",
            "description": "The date and time when the user started the course",
            "example": "2025-08-01T10:00:00Z"
          },
          "completed_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Completed At",
            "description": "The date and time when the user completed the course",
            "example": "2025-08-01T11:15:00Z"
          },
          "time_duration": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Time Duration",
            "description": "The time duration of the course used by the user in ISO 8601 format",
            "example": "PT1H15M"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsCompletion"
      },
      "LmsCompletionPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsCompletion" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsCompletionPaginatedResponse"
      },
      "LmsContent": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title",
            "description": "The title of the content",
            "example": "NumPy Basics"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "The description of the content",
            "example": "Array manipulation"
          },
          "languages": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Languages",
            "description": "The languages of the content",
            "example": ["en_US", "en_GB"]
          },
          "cover_image": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cover Image",
            "description": "The URL of the cover image of the content",
            "example": "https://img.example.com/numpy.png"
          },
          "url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Url",
            "description": "The URL of the content",
            "example": "https://lms.example.com/content/numpy"
          },
          "duration": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Duration",
            "description": "The duration of the content in ISO 8601 format",
            "example": "PT45M"
          },
          "categories": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Categories",
            "description": "The categories of the content",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "skills": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Skills",
            "description": "The skills of the content",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "courses": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Courses",
            "description": "The courses that the content belongs to",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Order",
            "description": "Order of the content inside a course",
            "example": 1
          },
          "provider": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Provider",
            "description": "The provider of the content",
            "example": "Coursera"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of the content. Possible values include: ACTIVE, PENDING, INACTIVE or - in cases where there is no clear mapping - the original value passed through",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsContent"
      },
      "LmsContentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsContent" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsContentPaginatedResponse"
      },
      "LmsCourse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the course",
            "example": "Python for Data Science"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "The description of the course",
            "example": "Introductory course"
          },
          "cover_image": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cover Image",
            "description": "The URL of the cover image of the course",
            "example": "https://img.example.com/py.png"
          },
          "url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Url",
            "description": "The URL of the course",
            "example": "https://lms.example.com/course/py"
          },
          "duration": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Duration",
            "description": "The duration of the course in ISO 8601 format",
            "example": "PT5H30M"
          },
          "languages": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Languages",
            "description": "The languages of the course",
            "example": ["en_US"]
          },
          "categories": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Categories",
            "description": "The categories of the course",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "contents": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Contents",
            "description": "The contents of the course",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "skills": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Skills",
            "description": "The skills of the course",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "instructors": {
            "anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
            "title": "Instructors",
            "description": "The instructors of the course",
            "example": ["018b18ef-c487-703c-afd9-0ca478ccd9d6"]
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of the course. Possible values include: ACTIVE, PENDING, INACTIVE or - in cases where there is no clear mapping - the original value passed through",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsCourse"
      },
      "LmsCoursePaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsCourse" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsCoursePaginatedResponse"
      },
      "LmsEnrollment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "user": {
            "anyOf": [{}, { "type": "null" }],
            "title": "User",
            "description": "The user who is enrolled in the course",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "course": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Course",
            "description": "The course that the user is enrolled in",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "start_date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date",
            "description": "The date and time when the user started the course",
            "example": "2025-08-01T10:00:00Z"
          },
          "completion": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Completion",
            "description": "The completion of the course",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsEnrollment"
      },
      "LmsEnrollmentPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsEnrollment" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsEnrollmentPaginatedResponse"
      },
      "LmsSkill": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The name of the skill",
            "example": "Data Analysis"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of the skill. Possible values include: ACTIVE, PENDING, INACTIVE or - in cases where there is no clear mapping - the original value passed through",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsSkill"
      },
      "LmsSkillPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsSkill" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsSkillPaginatedResponse"
      },
      "LmsUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The first name of the user",
            "example": "Jane"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The last name of the user",
            "example": "Doe"
          },
          "middle_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Middle Name",
            "description": "The middle name of the user",
            "example": "A."
          },
          "email_address": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email Address",
            "description": "The email address of the user",
            "example": "jane.doe@example.com"
          },
          "phone_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Phone Number",
            "description": "The phone number of the user",
            "example": "+1 415 555 1212"
          },
          "status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Status",
            "description": "The status of the user. Possible values include: ACTIVE, PENDING, INACTIVE or - in cases where there is no clear mapping - the original value passed through",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "required": ["id", "remote_id", "modified_at", "custom_fields"],
        "title": "LmsUser"
      },
      "LmsUserPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/LmsUser" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "LmsUserPaginatedResponse"
      },
      "MetaApiResponseModel": {
        "properties": {
          "success": { "type": "boolean", "title": "Success" },
          "data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Data"
          },
          "error": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Error"
          }
        },
        "type": "object",
        "required": ["success"],
        "title": "MetaApiResponseModel"
      },
      "PassThroughRequest": {
        "properties": {
          "method": {
            "$ref": "#/components/schemas/HttpMethodEnum",
            "title": "method",
            "description": "Method of the request",
            "example": "POST"
          },
          "path": {
            "type": "string",
            "title": "path",
            "description": "Path of the request",
            "example": "/employees"
          },
          "headers": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "headers",
            "description": "headers of the request",
            "example": { "Content-Type": "application/json" }
          },
          "params": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "params",
            "description": "params of the request",
            "default": {},
            "example": { "a": 1, "b": 2 }
          },
          "data": {
            "anyOf": [{}, { "type": "null" }],
            "title": "data",
            "description": "Body of the request",
            "example": { "a": 1, "b": 2 }
          },
          "request_format": {
            "anyOf": [
              { "$ref": "#/components/schemas/RequestFormatEnum" },
              { "type": "null" }
            ],
            "title": "Request Format",
            "description": "format of the request",
            "default": "JSON",
            "example": "JSON"
          },
          "response_format": {
            "anyOf": [
              { "$ref": "#/components/schemas/ResponseFormatEnum" },
              { "type": "null" }
            ],
            "title": "Response Format",
            "description": "format of the response",
            "default": "JSON",
            "example": "JSON"
          },
          "timeout": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Timeout",
            "description": "timeout of the request",
            "example": 300.0
          }
        },
        "type": "object",
        "required": ["method", "path", "headers"],
        "title": "PassThroughRequest"
      },
      "PostCandidate": {
        "properties": {
          "first_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "First Name",
            "description": "The candidate's first name.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Last Name",
            "description": "The candidate's last name.",
            "example": "Doe"
          },
          "company": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Company",
            "description": "The name of the company where candidate has applied.",
            "example": "Google"
          },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title",
            "description": "The position for which the candidate has applied",
            "example": "SOFTWARE ENGINEER"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Private",
            "description": "Whether the candidate's information is private.",
            "example": true
          },
          "can_email": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Can Email",
            "description": "Whether the candidate can be emailed.",
            "example": true
          },
          "locations": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Locations",
            "description": "The location of the candidate.",
            "default": [],
            "example": ["San Francisco", "New York"]
          },
          "phone_numbers": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Phone Numbers",
            "description": "The candidate's phone numbers.",
            "default": [],
            "example": ["123-456-7890"]
          },
          "email_addresses": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Email Addresses",
            "description": "The candidate's email addresses.",
            "default": [],
            "example": ["john@doe.com"]
          },
          "urls": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/AtsUrl" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Urls",
            "description": "The candidate's URLs. This can include a personal website, LinkedIn profile, or other relevant URLs.",
            "default": [],
            "example": [
              {
                "type": "LINKEDIN",
                "value": "https://www.linkedin.com/in/johndoe"
              }
            ]
          },
          "tags": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Tags",
            "description": "The candidate's tags. Tags are used to categorize candidates and can be used to filter candidates in the UI.",
            "default": [],
            "example": ["JUNIOR", "INTERMEDIATE"]
          },
          "applications": {
            "anyOf": [
              {
                "items": { "type": "string", "format": "uuid" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Applications",
            "description": "The candidate's applications.",
            "default": [],
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          },
          "attachments": {
            "anyOf": [
              {
                "items": { "type": "string", "format": "uuid" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Attachments",
            "description": "The candidate's attachments.",
            "default": [],
            "example": ["018b4bfb-5ece-70b1-ad5e-862a9433aa65"]
          },
          "avatar": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Avatar",
            "description": "The candidate's avatar.",
            "example": "https://www.example.com/avatar.jpg"
          },
          "job_interview_stage_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Job Interview Stage Id",
            "description": "The job stage id for the candidate",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          },
          "job_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Job Id",
            "description": "The job id for the candidate",
            "example": "018b4bfb-5ece-70b1-ad5e-862a9433aa65"
          }
        },
        "type": "object",
        "title": "PostCandidate"
      },
      "RateCategory": {
        "type": "string",
        "enum": ["ST", "OT", "DT"],
        "title": "RateCategory"
      },
      "RateType": {
        "type": "string",
        "enum": ["br", "pr"],
        "title": "RateType"
      },
      "RateUnitOfMeasurement": {
        "type": "string",
        "enum": ["Hr", "Daily"],
        "title": "RateUnitOfMeasurement"
      },
      "RequestFormatEnum": {
        "type": "string",
        "enum": ["JSON", "XML", "MULTIPART"],
        "title": "RequestFormatEnum"
      },
      "ResponseFormatEnum": {
        "type": "string",
        "enum": ["JSON", "XML", "MULTIPART"],
        "title": "ResponseFormatEnum"
      },
      "Tax": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "The tax's name.",
            "example": "California State Income Tax"
          },
          "amount": {
            "anyOf": [
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Amount",
            "description": "The tax amount.",
            "example": 175.22
          }
        },
        "type": "object",
        "required": ["name", "amount"],
        "title": "Tax"
      },
      "UnifiedApiCategory": {
        "type": "string",
        "enum": ["HRIS", "ATS", "LMS"],
        "title": "UnifiedApiCategory"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VmsJobPosting": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "external_job_posting_id": {
            "type": "string",
            "title": "External Job Posting Id",
            "description": "Any unique identifier of this job posting.",
            "example": "KTJP1213456"
          },
          "creator_username": {
            "type": "string",
            "title": "Creator Username",
            "description": "username of the creator of this job posting",
            "example": "kunal_tyagi"
          },
          "owner_username": {
            "type": "string",
            "title": "Owner Username",
            "description": "Username of the owner of job posting",
            "example": "om_anand"
          },
          "job_template_id": {
            "type": "string",
            "title": "Job Template Id",
            "description": "Job template Id for this job posting",
            "example": "KTJT123123"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "The title of this job posting",
            "example": "Job posting for Chef Server"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency for this job posting",
            "example": "USD"
          },
          "number_of_positions": {
            "type": "string",
            "title": "Number Of Positions",
            "description": "Number of positions for this job posting",
            "example": "1"
          },
          "cost_center_code": {
            "type": "string",
            "title": "Cost Center Code",
            "description": "Cost center code for this Job posting",
            "example": "KTCC"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date",
            "description": "Start date for this job posting",
            "example": "2024-02-08T00:00:00Z"
          },
          "end_date": {
            "type": "string",
            "title": "End Date",
            "description": "End date for this job posting",
            "example": "2024-02-14T00:00:00Z"
          },
          "site_code": {
            "type": "string",
            "title": "Site Code",
            "description": "Site code for this job posting",
            "example": "KTSC"
          },
          "location_code": {
            "type": "string",
            "title": "Location Code",
            "description": "Location code for this job posting",
            "example": "AGLC"
          },
          "business_unit_code": {
            "type": "string",
            "title": "Business Unit Code",
            "description": "Business Unit Code for this Job posting",
            "example": "OMBUC"
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "external_job_posting_id",
          "creator_username",
          "owner_username",
          "job_template_id",
          "title",
          "currency",
          "number_of_positions",
          "cost_center_code",
          "start_date",
          "end_date",
          "site_code",
          "location_code",
          "business_unit_code"
        ],
        "title": "VmsJobPosting"
      },
      "VmsJobPostingCreateRequest": {
        "properties": {
          "additional_attributes": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Additional Attributes",
            "description": "Fields related to models other than employee Model",
            "example": {
              "contract_end_date": "2025-12-31T00:00:00",
              "previous_employer": "TechCorp"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": { "customTshirtSize": "XXL" }
          },
          "model": { "$ref": "#/components/schemas/VmsJobPosting" }
        },
        "type": "object",
        "required": ["model"],
        "title": "VmsJobPostingCreateRequest"
      },
      "VmsJobPostingPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/VmsJobPosting" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "VmsJobPostingPaginatedResponse"
      },
      "VmsJobSeeker-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "external_job_seeker_id": {
            "type": "string",
            "title": "External Job Seeker Id",
            "description": "Any unique identifier of this job seeker.",
            "example": "KTY1213456"
          },
          "job_posting_id": {
            "type": "string",
            "title": "Job Posting Id",
            "description": "The unique identifier for the Job Posting. This identifier must match the external \n        Job Posting identifier for the corresponding data record listed in the Job Posting",
            "example": "KUNALJP1001"
          },
          "first_name": {
            "type": "string",
            "title": "First Name",
            "description": "The first name of this job seeker.",
            "example": "Kunal"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name",
            "description": "The last name of this job seeker.",
            "example": "Tyagi"
          },
          "date_available": {
            "type": "string",
            "title": "Date Available",
            "description": "The date the job seeker is available to begin working.",
            "example": "2023-11-10T00:00:00Z"
          },
          "supplier_code": {
            "type": "string",
            "title": "Supplier Code",
            "description": "The company code of the job seeker’s supplier.",
            "example": "KTSC07"
          },
          "security_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Security Id",
            "description": "The security ID of the job seeker.",
            "example": "KTY12084523"
          },
          "rates": {
            "items": { "$ref": "#/components/schemas/VmsRate" },
            "type": "array",
            "title": "Rates",
            "description": "Different rates for the job seeker",
            "example": [
              {
                "rate_category": "ST",
                "rate_type": "br",
                "rate_uom": "Hr",
                "value": 21.02
              }
            ]
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email",
            "description": "The email address of the job seeker.",
            "example": "kunal@bindbee.dev"
          },
          "site_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Site Code",
            "description": "Site code for job seeker.",
            "example": "KTSC"
          },
          "location_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location Code",
            "description": "Work location code for job seeker.",
            "example": "OMLC"
          },
          "worker_pay_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Worker Pay Type",
            "description": "Work type code for job seeker",
            "example": "AGWTC"
          },
          "submitted_to_other_job_posting": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Submitted To Other Job Posting",
            "description": "Indicates whether this specific job seeker is submitted to other job postings",
            "example": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "external_job_seeker_id",
          "job_posting_id",
          "first_name",
          "last_name",
          "date_available",
          "supplier_code",
          "security_id",
          "rates",
          "email",
          "site_code",
          "location_code",
          "worker_pay_type",
          "submitted_to_other_job_posting"
        ],
        "title": "VmsJobSeeker"
      },
      "VmsJobSeeker-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "external_job_seeker_id": {
            "type": "string",
            "title": "External Job Seeker Id",
            "description": "Any unique identifier of this job seeker.",
            "example": "KTY1213456"
          },
          "job_posting_id": {
            "type": "string",
            "title": "Job Posting Id",
            "description": "The unique identifier for the Job Posting. This identifier must match the external \n        Job Posting identifier for the corresponding data record listed in the Job Posting",
            "example": "KUNALJP1001"
          },
          "first_name": {
            "type": "string",
            "title": "First Name",
            "description": "The first name of this job seeker.",
            "example": "Kunal"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name",
            "description": "The last name of this job seeker.",
            "example": "Tyagi"
          },
          "date_available": {
            "type": "string",
            "title": "Date Available",
            "description": "The date the job seeker is available to begin working.",
            "example": "2023-11-10T00:00:00Z"
          },
          "supplier_code": {
            "type": "string",
            "title": "Supplier Code",
            "description": "The company code of the job seeker’s supplier.",
            "example": "KTSC07"
          },
          "security_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Security Id",
            "description": "The security ID of the job seeker.",
            "example": "KTY12084523"
          },
          "rates": {
            "items": { "$ref": "#/components/schemas/VmsRate" },
            "type": "array",
            "title": "Rates",
            "description": "Different rates for the job seeker",
            "example": [
              {
                "rate_category": "ST",
                "rate_type": "br",
                "rate_uom": "Hr",
                "value": 21.02
              }
            ]
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email",
            "description": "The email address of the job seeker.",
            "example": "kunal@bindbee.dev"
          },
          "site_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Site Code",
            "description": "Site code for job seeker.",
            "example": "KTSC"
          },
          "location_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location Code",
            "description": "Work location code for job seeker.",
            "example": "OMLC"
          },
          "worker_pay_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Worker Pay Type",
            "description": "Work type code for job seeker",
            "example": "AGWTC"
          },
          "submitted_to_other_job_posting": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Submitted To Other Job Posting",
            "description": "Indicates whether this specific job seeker is submitted to other job postings",
            "example": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "external_job_seeker_id",
          "job_posting_id",
          "first_name",
          "last_name",
          "date_available",
          "supplier_code",
          "security_id",
          "rates",
          "email",
          "site_code",
          "location_code",
          "worker_pay_type",
          "submitted_to_other_job_posting"
        ],
        "title": "VmsJobSeeker"
      },
      "VmsJobSeekerCreateRequest": {
        "properties": {
          "additional_attributes": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Additional Attributes",
            "description": "Fields related to models other than employee Model",
            "example": {
              "contract_end_date": "2025-12-31T00:00:00",
              "previous_employer": "TechCorp"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": { "customTshirtSize": "XXL" }
          },
          "model": { "$ref": "#/components/schemas/VmsJobSeeker-Input" }
        },
        "type": "object",
        "required": ["model"],
        "title": "VmsJobSeekerCreateRequest"
      },
      "VmsJobSeekerPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": { "$ref": "#/components/schemas/VmsJobSeeker-Output" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "VmsJobSeekerPaginatedResponse"
      },
      "VmsJobWorkOrderAcceptPaginatedResponse": {
        "properties": {
          "cursor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cursor",
            "description": "Cursor value to fetch next set of items",
            "example": "MDE4YjE4ZWYtYzk5Yy03YTg2LTk5NDYtN2I3YzlkNTQzM2U1"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Indicates the count of items in the response",
            "example": 50
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/VmsWorkOrderAccept-Output"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["cursor", "page_size", "items"],
        "title": "VmsJobWorkOrderAcceptPaginatedResponse"
      },
      "VmsPayRate": {
        "properties": {
          "rate_type": {
            "$ref": "#/components/schemas/RateType",
            "default": "pr"
          },
          "rate_category": {
            "$ref": "#/components/schemas/RateCategory",
            "description": "Allowed rate categories are STANDARD_RATE, OVERTIME_RATE and DOUBLE_RATE",
            "example": "ST"
          },
          "rate_uom": {
            "$ref": "#/components/schemas/RateUnitOfMeasurement",
            "description": "Allowed rate units are HOURLY and DAILY",
            "example": "Hr"
          },
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "integer" }],
            "title": "Value",
            "description": "Value of the rate",
            "example": 21.02
          }
        },
        "type": "object",
        "required": ["rate_category", "rate_uom", "value"],
        "title": "VmsPayRate"
      },
      "VmsRate": {
        "properties": {
          "rate_type": {
            "$ref": "#/components/schemas/RateType",
            "description": "Allowed rate types are BILL_RATE and PAY_RATE",
            "example": "br"
          },
          "rate_category": {
            "$ref": "#/components/schemas/RateCategory",
            "description": "Allowed rate categories are STANDARD_RATE, OVERTIME_RATE and DOUBLE_RATE",
            "example": "ST"
          },
          "rate_uom": {
            "$ref": "#/components/schemas/RateUnitOfMeasurement",
            "description": "Allowed rate units are HOURLY and DAILY",
            "example": "Hr"
          },
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "integer" }],
            "title": "Value",
            "description": "Value of the rate",
            "example": 21.02
          }
        },
        "type": "object",
        "required": ["rate_type", "rate_category", "rate_uom", "value"],
        "title": "VmsRate"
      },
      "VmsWorkOrderAccept-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "work_order_id": {
            "type": "string",
            "title": "Work Order Id",
            "description": "Work Order ID",
            "example": "KTWO10002"
          },
          "job_seeker_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Job Seeker Id",
            "description": "Job Seeker ID",
            "example": "KTJS9873264A"
          },
          "worker_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Worker Email",
            "description": "Worker Email",
            "example": "kunal@bindbee.dev"
          },
          "pay_rates": {
            "items": { "$ref": "#/components/schemas/VmsPayRate" },
            "type": "array",
            "title": "Pay Rates",
            "description": "Pay Rates for this Work Order",
            "example": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "work_order_id",
          "job_seeker_id",
          "worker_email",
          "pay_rates"
        ],
        "title": "VmsWorkOrderAccept"
      },
      "VmsWorkOrderAccept-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "example": "018b18ef-c487-703c-afd9-0ca478ccd9d6"
          },
          "remote_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remote Id",
            "description": "The third-party API ID of the matching object.",
            "example": "123321"
          },
          "modified_at": {
            "type": "string",
            "title": "Modified At",
            "description": "This is the datetime that this object was last updated by Bindbee",
            "example": "2021-10-16T00:00:00Z"
          },
          "raw_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Raw Data",
            "description": "This is the Raw data",
            "example": {
              "key_1": "Platform dependent data 1",
              "key_2": "Platform dependent data 2"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": {
              "category_group": "REG",
              "disability_type": "ASBERG",
              "hire_date": "1991-03-16T00:00:00",
              "hire_source": "REFER",
              "nationality": "USA",
              "original_hire_date": "1991-03-16T00:00:00"
            }
          },
          "work_order_id": {
            "type": "string",
            "title": "Work Order Id",
            "description": "Work Order ID",
            "example": "KTWO10002"
          },
          "job_seeker_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Job Seeker Id",
            "description": "Job Seeker ID",
            "example": "KTJS9873264A"
          },
          "worker_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Worker Email",
            "description": "Worker Email",
            "example": "kunal@bindbee.dev"
          },
          "pay_rates": {
            "items": { "$ref": "#/components/schemas/VmsPayRate" },
            "type": "array",
            "title": "Pay Rates",
            "description": "Pay Rates for this Work Order",
            "example": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "remote_id",
          "modified_at",
          "custom_fields",
          "work_order_id",
          "job_seeker_id",
          "worker_email",
          "pay_rates"
        ],
        "title": "VmsWorkOrderAccept"
      },
      "VmsWorkOrderAcceptCreateRequest": {
        "properties": {
          "additional_attributes": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Additional Attributes",
            "description": "Fields related to models other than employee Model",
            "example": {
              "contract_end_date": "2025-12-31T00:00:00",
              "previous_employer": "TechCorp"
            }
          },
          "custom_fields": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Custom Fields",
            "description": "The custom fields related to the model",
            "example": { "customTshirtSize": "XXL" }
          },
          "model": { "$ref": "#/components/schemas/VmsWorkOrderAccept-Input" }
        },
        "type": "object",
        "required": ["model"],
        "title": "VmsWorkOrderAcceptCreateRequest"
      },
      "WriteApiResponseModel": {
        "properties": {
          "success": { "type": "boolean", "title": "Success" },
          "data": { "type": "string", "title": "Data" },
          "error": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Error"
          }
        },
        "type": "object",
        "required": ["success", "data"],
        "title": "WriteApiResponseModel"
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  }
}
